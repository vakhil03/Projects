{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "796d9114",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2022-04-18T06:48:55.410443Z",
     "iopub.status.busy": "2022-04-18T06:48:55.409482Z",
     "iopub.status.idle": "2022-04-18T06:48:57.293758Z",
     "shell.execute_reply": "2022-04-18T06:48:57.292717Z"
    },
    "papermill": {
     "duration": 1.947208,
     "end_time": "2022-04-18T06:48:57.298132",
     "exception": false,
     "start_time": "2022-04-18T06:48:55.350924",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/scet/crashtest.csv\n",
      "/kaggle/input/scet/victim.csv\n",
      "/kaggle/input/scet/party.csv\n",
      "/kaggle/input/scet/crashtrain.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import sklearn as sk\n",
    "import statsmodels.api as sm\n",
    "import statsmodels.formula.api as smf\n",
    "import scipy as sp\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86e3a08d",
   "metadata": {
    "papermill": {
     "duration": 0.056765,
     "end_time": "2022-04-18T06:48:57.411645",
     "exception": false,
     "start_time": "2022-04-18T06:48:57.354880",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Introductory Data Analysis and Data Cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6cc14865",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:48:57.524521Z",
     "iopub.status.busy": "2022-04-18T06:48:57.523718Z",
     "iopub.status.idle": "2022-04-18T06:49:03.662534Z",
     "shell.execute_reply": "2022-04-18T06:49:03.660412Z"
    },
    "papermill": {
     "duration": 6.198626,
     "end_time": "2022-04-18T06:49:03.665629",
     "exception": false,
     "start_time": "2022-04-18T06:48:57.467003",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3524: DtypeWarning: Columns (7) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  exec(code_obj, self.user_global_ns, self.user_ns)\n",
      "/opt/conda/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3524: DtypeWarning: Columns (16) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  exec(code_obj, self.user_global_ns, self.user_ns)\n"
     ]
    }
   ],
   "source": [
    "training = pd.read_csv('/kaggle/input/scet/crashtrain.csv')\n",
    "testing = pd.read_csv('/kaggle/input/scet/crashtest.csv')\n",
    "victim = pd.read_csv('/kaggle/input/scet/victim.csv')\n",
    "party = pd.read_csv('/kaggle/input/scet/party.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a27b8467",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:03.779882Z",
     "iopub.status.busy": "2022-04-18T06:49:03.779577Z",
     "iopub.status.idle": "2022-04-18T06:49:04.389759Z",
     "shell.execute_reply": "2022-04-18T06:49:04.388826Z"
    },
    "papermill": {
     "duration": 0.6696,
     "end_time": "2022-04-18T06:49:04.392112",
     "exception": false,
     "start_time": "2022-04-18T06:49:03.722512",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>jurisdiction</th>\n",
       "      <th>officer_id</th>\n",
       "      <th>reporting_district</th>\n",
       "      <th>chp_shift</th>\n",
       "      <th>population</th>\n",
       "      <th>county_city_location</th>\n",
       "      <th>special_condition</th>\n",
       "      <th>beat_type</th>\n",
       "      <th>chp_beat_type</th>\n",
       "      <th>...</th>\n",
       "      <th>bicyclist_injured_count</th>\n",
       "      <th>motorcyclist_killed_count</th>\n",
       "      <th>motorcyclist_injured_count</th>\n",
       "      <th>primary_ramp</th>\n",
       "      <th>secondary_ramp</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>collision_date</th>\n",
       "      <th>collision_time</th>\n",
       "      <th>process_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216295</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216296</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216297</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216298</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216299</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>216300 rows × 74 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        case_id  jurisdiction  officer_id  reporting_district  chp_shift  \\\n",
       "0         False         False       False                True      False   \n",
       "1         False         False       False                True      False   \n",
       "2         False         False       False               False      False   \n",
       "3         False         False       False               False      False   \n",
       "4         False         False       False               False      False   \n",
       "...         ...           ...         ...                 ...        ...   \n",
       "216295    False         False       False               False      False   \n",
       "216296    False         False       False                True      False   \n",
       "216297    False         False       False               False      False   \n",
       "216298    False         False       False                True      False   \n",
       "216299    False         False       False                True      False   \n",
       "\n",
       "        population  county_city_location  special_condition  beat_type  \\\n",
       "0            False                 False              False      False   \n",
       "1            False                 False              False      False   \n",
       "2            False                 False              False      False   \n",
       "3            False                 False               True      False   \n",
       "4            False                 False              False      False   \n",
       "...            ...                   ...                ...        ...   \n",
       "216295       False                 False              False      False   \n",
       "216296       False                 False              False      False   \n",
       "216297       False                 False              False      False   \n",
       "216298       False                 False              False      False   \n",
       "216299       False                 False              False      False   \n",
       "\n",
       "        chp_beat_type  ...  bicyclist_injured_count  \\\n",
       "0               False  ...                    False   \n",
       "1               False  ...                    False   \n",
       "2               False  ...                    False   \n",
       "3               False  ...                    False   \n",
       "4               False  ...                    False   \n",
       "...               ...  ...                      ...   \n",
       "216295          False  ...                    False   \n",
       "216296          False  ...                    False   \n",
       "216297          False  ...                    False   \n",
       "216298          False  ...                    False   \n",
       "216299          False  ...                    False   \n",
       "\n",
       "        motorcyclist_killed_count  motorcyclist_injured_count  primary_ramp  \\\n",
       "0                           False                       False          True   \n",
       "1                           False                       False          True   \n",
       "2                           False                       False          True   \n",
       "3                           False                       False          True   \n",
       "4                           False                       False          True   \n",
       "...                           ...                         ...           ...   \n",
       "216295                      False                       False          True   \n",
       "216296                      False                       False          True   \n",
       "216297                      False                       False          True   \n",
       "216298                      False                       False          True   \n",
       "216299                      False                       False          True   \n",
       "\n",
       "        secondary_ramp  latitude  longitude  collision_date  collision_time  \\\n",
       "0                 True      True       True           False           False   \n",
       "1                 True      True       True           False           False   \n",
       "2                 True      True       True           False           False   \n",
       "3                 True      True       True           False           False   \n",
       "4                 True      True       True           False           False   \n",
       "...                ...       ...        ...             ...             ...   \n",
       "216295            True      True       True           False           False   \n",
       "216296            True      True       True           False           False   \n",
       "216297            True      True       True           False           False   \n",
       "216298            True      True       True           False           False   \n",
       "216299            True      True       True           False           False   \n",
       "\n",
       "        process_date  \n",
       "0              False  \n",
       "1              False  \n",
       "2              False  \n",
       "3              False  \n",
       "4              False  \n",
       "...              ...  \n",
       "216295         False  \n",
       "216296         False  \n",
       "216297         False  \n",
       "216298         False  \n",
       "216299         False  \n",
       "\n",
       "[216300 rows x 74 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training.isna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6f75425b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:04.507802Z",
     "iopub.status.busy": "2022-04-18T06:49:04.507488Z",
     "iopub.status.idle": "2022-04-18T06:49:05.084327Z",
     "shell.execute_reply": "2022-04-18T06:49:05.083320Z"
    },
    "papermill": {
     "duration": 0.637244,
     "end_time": "2022-04-18T06:49:05.086794",
     "exception": false,
     "start_time": "2022-04-18T06:49:04.449550",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "case_id                    0\n",
       "jurisdiction             182\n",
       "officer_id               448\n",
       "reporting_district    140563\n",
       "chp_shift                  0\n",
       "                       ...  \n",
       "latitude              139916\n",
       "longitude             139916\n",
       "collision_date             0\n",
       "collision_time           598\n",
       "process_date               0\n",
       "Length: 74, dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "40bee319",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:05.203645Z",
     "iopub.status.busy": "2022-04-18T06:49:05.202812Z",
     "iopub.status.idle": "2022-04-18T06:49:05.353232Z",
     "shell.execute_reply": "2022-04-18T06:49:05.352409Z"
    },
    "papermill": {
     "duration": 0.212045,
     "end_time": "2022-04-18T06:49:05.356447",
     "exception": false,
     "start_time": "2022-04-18T06:49:05.144402",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>jurisdiction</th>\n",
       "      <th>officer_id</th>\n",
       "      <th>reporting_district</th>\n",
       "      <th>chp_shift</th>\n",
       "      <th>population</th>\n",
       "      <th>county_city_location</th>\n",
       "      <th>special_condition</th>\n",
       "      <th>beat_type</th>\n",
       "      <th>chp_beat_type</th>\n",
       "      <th>...</th>\n",
       "      <th>bicyclist_injured_count</th>\n",
       "      <th>motorcyclist_killed_count</th>\n",
       "      <th>motorcyclist_injured_count</th>\n",
       "      <th>primary_ramp</th>\n",
       "      <th>secondary_ramp</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>collision_date</th>\n",
       "      <th>collision_time</th>\n",
       "      <th>process_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8.975622e+06</td>\n",
       "      <td>3003.0</td>\n",
       "      <td>1248</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3003</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-28</td>\n",
       "      <td>18:58:00</td>\n",
       "      <td>2019-11-22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.413594e+06</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>1978</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2005-12-10</td>\n",
       "      <td>15:00:00</td>\n",
       "      <td>2006-04-13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.419931e+06</td>\n",
       "      <td>4307.0</td>\n",
       "      <td>S0542</td>\n",
       "      <td>LG206</td>\n",
       "      <td>5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4307</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2009-09-11</td>\n",
       "      <td>14:57:00</td>\n",
       "      <td>2010-05-19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.801010e+18</td>\n",
       "      <td>3801.0</td>\n",
       "      <td>2108</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2001-03-19</td>\n",
       "      <td>17:05:00</td>\n",
       "      <td>2001-07-27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.142389e+06</td>\n",
       "      <td>2701.0</td>\n",
       "      <td>5543</td>\n",
       "      <td>CRML</td>\n",
       "      <td>5</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2701</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2016-09-17</td>\n",
       "      <td>17:32:00</td>\n",
       "      <td>2016-10-20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216295</th>\n",
       "      <td>8.379958e+06</td>\n",
       "      <td>1901.0</td>\n",
       "      <td>275</td>\n",
       "      <td>17</td>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1901</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017-04-20</td>\n",
       "      <td>11:52:00</td>\n",
       "      <td>2017-07-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216296</th>\n",
       "      <td>3.388177e+06</td>\n",
       "      <td>9295.0</td>\n",
       "      <td>010846</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>9.0</td>\n",
       "      <td>300</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>state route</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2007-09-20</td>\n",
       "      <td>12:15:00</td>\n",
       "      <td>2008-03-27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216297</th>\n",
       "      <td>8.749483e+06</td>\n",
       "      <td>3342.0</td>\n",
       "      <td>788</td>\n",
       "      <td>631</td>\n",
       "      <td>5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3342</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2018-09-04</td>\n",
       "      <td>05:33:00</td>\n",
       "      <td>2019-01-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216298</th>\n",
       "      <td>9.019111e+07</td>\n",
       "      <td>9135.0</td>\n",
       "      <td>014425</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>9.0</td>\n",
       "      <td>4500</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>safety services program</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2016-05-24</td>\n",
       "      <td>15:30:00</td>\n",
       "      <td>2016-05-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216299</th>\n",
       "      <td>8.441471e+06</td>\n",
       "      <td>3608.0</td>\n",
       "      <td>4342</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3608</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017-08-21</td>\n",
       "      <td>16:03:00</td>\n",
       "      <td>2017-09-14</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>216300 rows × 74 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             case_id  jurisdiction officer_id reporting_district  chp_shift  \\\n",
       "0       8.975622e+06        3003.0       1248                NaN          5   \n",
       "1       2.413594e+06        3000.0       1978                NaN          5   \n",
       "2       4.419931e+06        4307.0      S0542              LG206          5   \n",
       "3       3.801010e+18        3801.0       2108                  0          5   \n",
       "4       8.142389e+06        2701.0       5543               CRML          5   \n",
       "...              ...           ...        ...                ...        ...   \n",
       "216295  8.379958e+06        1901.0        275                 17          5   \n",
       "216296  3.388177e+06        9295.0     010846                NaN          1   \n",
       "216297  8.749483e+06        3342.0        788                631          5   \n",
       "216298  9.019111e+07        9135.0     014425                NaN          2   \n",
       "216299  8.441471e+06        3608.0       4342                NaN          5   \n",
       "\n",
       "        population  county_city_location  special_condition  beat_type  \\\n",
       "0              5.0                  3003                0.0          0   \n",
       "1              4.0                  3021                0.0          0   \n",
       "2              4.0                  4307                0.0          0   \n",
       "3              7.0                  3801                NaN          0   \n",
       "4              2.0                  2701                0.0          0   \n",
       "...            ...                   ...                ...        ...   \n",
       "216295         5.0                  1901                0.0          0   \n",
       "216296         9.0                   300                0.0          1   \n",
       "216297         4.0                  3342                0.0          0   \n",
       "216298         9.0                  4500                0.0          2   \n",
       "216299         5.0                  3608                0.0          0   \n",
       "\n",
       "                  chp_beat_type  ... bicyclist_injured_count  \\\n",
       "0                       not chp  ...                       0   \n",
       "1                       not chp  ...                       0   \n",
       "2                       not chp  ...                       0   \n",
       "3                       not chp  ...                       0   \n",
       "4                       not chp  ...                       0   \n",
       "...                         ...  ...                     ...   \n",
       "216295                  not chp  ...                       0   \n",
       "216296              state route  ...                       0   \n",
       "216297                  not chp  ...                       0   \n",
       "216298  safety services program  ...                       0   \n",
       "216299                  not chp  ...                       0   \n",
       "\n",
       "       motorcyclist_killed_count motorcyclist_injured_count primary_ramp  \\\n",
       "0                              0                          1          NaN   \n",
       "1                              0                          1          NaN   \n",
       "2                              0                          1          NaN   \n",
       "3                              0                          1          NaN   \n",
       "4                              0                          0          NaN   \n",
       "...                          ...                        ...          ...   \n",
       "216295                         0                          1          NaN   \n",
       "216296                         0                          1          NaN   \n",
       "216297                         0                          1          NaN   \n",
       "216298                         0                          1          NaN   \n",
       "216299                         0                          1          NaN   \n",
       "\n",
       "       secondary_ramp  latitude longitude  collision_date collision_time  \\\n",
       "0                 NaN       NaN       NaN      2019-09-28       18:58:00   \n",
       "1                 NaN       NaN       NaN      2005-12-10       15:00:00   \n",
       "2                 NaN       NaN       NaN      2009-09-11       14:57:00   \n",
       "3                 NaN       NaN       NaN      2001-03-19       17:05:00   \n",
       "4                 NaN       NaN       NaN      2016-09-17       17:32:00   \n",
       "...               ...       ...       ...             ...            ...   \n",
       "216295            NaN       NaN       NaN      2017-04-20       11:52:00   \n",
       "216296            NaN       NaN       NaN      2007-09-20       12:15:00   \n",
       "216297            NaN       NaN       NaN      2018-09-04       05:33:00   \n",
       "216298            NaN       NaN       NaN      2016-05-24       15:30:00   \n",
       "216299            NaN       NaN       NaN      2017-08-21       16:03:00   \n",
       "\n",
       "       process_date  \n",
       "0        2019-11-22  \n",
       "1        2006-04-13  \n",
       "2        2010-05-19  \n",
       "3        2001-07-27  \n",
       "4        2016-10-20  \n",
       "...             ...  \n",
       "216295   2017-07-06  \n",
       "216296   2008-03-27  \n",
       "216297   2019-01-08  \n",
       "216298   2016-05-31  \n",
       "216299   2017-09-14  \n",
       "\n",
       "[216300 rows x 74 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "da535211",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:05.475096Z",
     "iopub.status.busy": "2022-04-18T06:49:05.474666Z",
     "iopub.status.idle": "2022-04-18T06:49:07.258315Z",
     "shell.execute_reply": "2022-04-18T06:49:07.257468Z"
    },
    "papermill": {
     "duration": 1.845773,
     "end_time": "2022-04-18T06:49:07.260705",
     "exception": false,
     "start_time": "2022-04-18T06:49:05.414932",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='weather_1', ylabel='Count'>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "injured_only = training.where(training['injured_victims']==1).dropna(axis = 0, how = any, thresh = 1)[['weather_1', 'injured_victims']]\n",
    "sns.histplot(x=injured_only['weather_1'])\n",
    "#clear skies = most amount of injured --> weather does not have a significant effect on injury rate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "cc8cd1e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:07.382309Z",
     "iopub.status.busy": "2022-04-18T06:49:07.381778Z",
     "iopub.status.idle": "2022-04-18T06:49:09.115051Z",
     "shell.execute_reply": "2022-04-18T06:49:09.114018Z"
    },
    "papermill": {
     "duration": 1.797174,
     "end_time": "2022-04-18T06:49:09.117449",
     "exception": false,
     "start_time": "2022-04-18T06:49:07.320275",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='road_condition_1', ylabel='Count'>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "injured_only_r = training.where(training['injured_victims']==1).dropna(axis = 0, how = any, thresh = 1)[['road_condition_1', 'injured_victims']]\n",
    "sns.histplot(x=injured_only_r['road_condition_1'])\n",
    "#normal road = most amount of injured --> road conditions do not have a significant effect on injury rate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b9585486",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:09.240734Z",
     "iopub.status.busy": "2022-04-18T06:49:09.240418Z",
     "iopub.status.idle": "2022-04-18T06:49:10.998956Z",
     "shell.execute_reply": "2022-04-18T06:49:10.998193Z"
    },
    "papermill": {
     "duration": 1.822665,
     "end_time": "2022-04-18T06:49:11.001206",
     "exception": false,
     "start_time": "2022-04-18T06:49:09.178541",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='lighting', ylabel='Count'>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "injured_only_l = training.where(training['injured_victims']==1).dropna(axis = 0, how = any, thresh = 1)[['lighting', 'injured_victims']]\n",
    "sns.histplot(x=injured_only_l['lighting'])\n",
    "#most injuries happen during daylight --> no significant effect"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4489e8df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:11.127058Z",
     "iopub.status.busy": "2022-04-18T06:49:11.126431Z",
     "iopub.status.idle": "2022-04-18T06:49:12.891455Z",
     "shell.execute_reply": "2022-04-18T06:49:12.889513Z"
    },
    "papermill": {
     "duration": 1.830666,
     "end_time": "2022-04-18T06:49:12.893787",
     "exception": false,
     "start_time": "2022-04-18T06:49:11.063121",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='type_of_collision', ylabel='Count'>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "injured_only_type = training.where(training['injured_victims']==1).dropna(axis = 0, how = any, thresh = 1)[['type_of_collision', 'injured_victims']]\n",
    "sns.histplot(x=injured_only_type['type_of_collision'])\n",
    "#great diversity in data - need to analyze"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "35ba4987",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:13.024408Z",
     "iopub.status.busy": "2022-04-18T06:49:13.023511Z",
     "iopub.status.idle": "2022-04-18T06:49:14.888683Z",
     "shell.execute_reply": "2022-04-18T06:49:14.887754Z"
    },
    "papermill": {
     "duration": 1.932596,
     "end_time": "2022-04-18T06:49:14.890763",
     "exception": false,
     "start_time": "2022-04-18T06:49:12.958167",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='road_surface', ylabel='Count'>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "injured_only_ro = training.where(training['injured_victims']==1).dropna(axis = 0, how = any, thresh = 1)[['road_surface', 'injured_victims']]\n",
    "sns.histplot(x=injured_only_ro['road_surface'])\n",
    "#most injuries happen when the road surface is dry --> no significant effect"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a6795604",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:15.022237Z",
     "iopub.status.busy": "2022-04-18T06:49:15.021791Z",
     "iopub.status.idle": "2022-04-18T06:49:16.690002Z",
     "shell.execute_reply": "2022-04-18T06:49:16.689075Z"
    },
    "papermill": {
     "duration": 1.737222,
     "end_time": "2022-04-18T06:49:16.692390",
     "exception": false,
     "start_time": "2022-04-18T06:49:14.955168",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='location_type', ylabel='Count'>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "injured_only_lt = training.where(training['injured_victims']==1).dropna(axis = 0, how = any, thresh = 1)[['location_type', 'injured_victims']]\n",
    "sns.histplot(x=injured_only_lt['location_type'])\n",
    "#most happen in highways --> main cause is assumed to be speeding on highways --> location has a significant impact on injury rate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7e0fcdde",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:16.825764Z",
     "iopub.status.busy": "2022-04-18T06:49:16.825182Z",
     "iopub.status.idle": "2022-04-18T06:49:19.643530Z",
     "shell.execute_reply": "2022-04-18T06:49:19.642435Z"
    },
    "papermill": {
     "duration": 2.887839,
     "end_time": "2022-04-18T06:49:19.645792",
     "exception": false,
     "start_time": "2022-04-18T06:49:16.757953",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='time_col', ylabel='Count'>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "training_2 = training\n",
    "training_2[\"time_col\"] = training_2['collision_time'].fillna('00:').str.extract(r'([0-9]{2})')\n",
    "training_2\n",
    "\n",
    "injured_only_timestamp = training_2.where(training_2['injured_victims']==1).dropna(axis = 0, how = any, thresh = 1)[['time_col', 'injured_victims']]\n",
    "sns.histplot(x=injured_only_timestamp['time_col'])\n",
    "#most happen in the afternoon, from 3pm-6pm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "bd09a081",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:19.783237Z",
     "iopub.status.busy": "2022-04-18T06:49:19.782783Z",
     "iopub.status.idle": "2022-04-18T06:49:21.766609Z",
     "shell.execute_reply": "2022-04-18T06:49:21.765582Z"
    },
    "papermill": {
     "duration": 2.056007,
     "end_time": "2022-04-18T06:49:21.768935",
     "exception": false,
     "start_time": "2022-04-18T06:49:19.712928",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='control_device', ylabel='Count'>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "injured_only_cd = training.where(training['injured_victims']==1).dropna(axis = 0, how = any, thresh = 1)[['control_device', 'injured_victims']]\n",
    "sns.histplot(x=injured_only_cd['control_device'])\n",
    "#most happen when there is no control device equipped in the vehicle --> what does this mean?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "a0375f5c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:21.907558Z",
     "iopub.status.busy": "2022-04-18T06:49:21.907099Z",
     "iopub.status.idle": "2022-04-18T06:49:23.874870Z",
     "shell.execute_reply": "2022-04-18T06:49:23.873377Z"
    },
    "papermill": {
     "duration": 2.040108,
     "end_time": "2022-04-18T06:49:23.877283",
     "exception": false,
     "start_time": "2022-04-18T06:49:21.837175",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='primary_collision_factor', ylabel='Count'>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "injured_only_pcf = training.where(training['injured_victims']==1).dropna(axis = 0, how = any, thresh = 1)[['primary_collision_factor', 'injured_victims']]\n",
    "sns.histplot(x=injured_only_pcf['primary_collision_factor'])\n",
    "#basically any vehicle code violation = leading factor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4e6db2e6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:24.023192Z",
     "iopub.status.busy": "2022-04-18T06:49:24.022909Z",
     "iopub.status.idle": "2022-04-18T06:49:26.153024Z",
     "shell.execute_reply": "2022-04-18T06:49:26.152126Z"
    },
    "papermill": {
     "duration": 2.203454,
     "end_time": "2022-04-18T06:49:26.155422",
     "exception": false,
     "start_time": "2022-04-18T06:49:23.951968",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='county_city_location', ylabel='Count'>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "injured_only_ccl = training.where(training['injured_victims']==1).dropna(axis = 0, how = any, thresh = 1)[['county_city_location', 'injured_victims']]\n",
    "sns.histplot(x=injured_only_ccl['county_city_location'])\n",
    "#one county has a huge count of accidents --> county link to accident rate? --> analyze further"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "605395b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:26.300437Z",
     "iopub.status.busy": "2022-04-18T06:49:26.300124Z",
     "iopub.status.idle": "2022-04-18T06:49:28.292691Z",
     "shell.execute_reply": "2022-04-18T06:49:28.291968Z"
    },
    "papermill": {
     "duration": 2.067871,
     "end_time": "2022-04-18T06:49:28.294740",
     "exception": false,
     "start_time": "2022-04-18T06:49:26.226869",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='collision_severity', ylabel='Count'>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "injured_only_sev = training.where(training['injured_victims']==1).dropna(axis = 0, how = any, thresh = 1)[['collision_severity','injured_victims']]\n",
    "sns.histplot(x=injured_only_sev['collision_severity'])\n",
    "#no particular link between the level of injury and \"injured\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f8aef704",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:28.445082Z",
     "iopub.status.busy": "2022-04-18T06:49:28.444310Z",
     "iopub.status.idle": "2022-04-18T06:49:28.722300Z",
     "shell.execute_reply": "2022-04-18T06:49:28.721300Z"
    },
    "papermill": {
     "duration": 0.355471,
     "end_time": "2022-04-18T06:49:28.724607",
     "exception": false,
     "start_time": "2022-04-18T06:49:28.369136",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>injured_victims</th>\n",
       "      <th>weather_1</th>\n",
       "      <th>county_city_location</th>\n",
       "      <th>location_type</th>\n",
       "      <th>pcf_violation_category</th>\n",
       "      <th>collision_severity</th>\n",
       "      <th>lighting</th>\n",
       "      <th>time_col</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3.098229e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>1941</td>\n",
       "      <td>highway</td>\n",
       "      <td>other than driver (or pedestrian)</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>dark with no street lights</td>\n",
       "      <td>02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2.607120e+05</td>\n",
       "      <td>1.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>3007</td>\n",
       "      <td>highway</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>other injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9.335011e+18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3801</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>daylight</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>8.612484e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3015</td>\n",
       "      <td>ramp</td>\n",
       "      <td>improper turning</td>\n",
       "      <td>pain</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>4.283125e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>1942</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>daylight</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216286</th>\n",
       "      <td>5.906362e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3603</td>\n",
       "      <td>ramp</td>\n",
       "      <td>speeding</td>\n",
       "      <td>severe injury</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216292</th>\n",
       "      <td>5.565961e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>111</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216294</th>\n",
       "      <td>8.001887e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>4316</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>other injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216296</th>\n",
       "      <td>3.388177e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>300</td>\n",
       "      <td>highway</td>\n",
       "      <td>wrong side of road</td>\n",
       "      <td>pain</td>\n",
       "      <td>daylight</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216297</th>\n",
       "      <td>8.749483e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3342</td>\n",
       "      <td>highway</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>other injury</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>60760 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             case_id  injured_victims weather_1  county_city_location  \\\n",
       "5       3.098229e+06              0.0     clear                  1941   \n",
       "8       2.607120e+05              1.0    cloudy                  3007   \n",
       "9       9.335011e+18              0.0     clear                  3801   \n",
       "11      8.612484e+06              1.0     clear                  3015   \n",
       "13      4.283125e+06              0.0     clear                  1942   \n",
       "...              ...              ...       ...                   ...   \n",
       "216286  5.906362e+06              1.0     clear                  3603   \n",
       "216292  5.565961e+06              0.0     clear                   111   \n",
       "216294  8.001887e+06              1.0     clear                  4316   \n",
       "216296  3.388177e+06              1.0    cloudy                   300   \n",
       "216297  8.749483e+06              1.0     clear                  3342   \n",
       "\n",
       "       location_type             pcf_violation_category    collision_severity  \\\n",
       "5            highway  other than driver (or pedestrian)  property damage only   \n",
       "8            highway                 unsafe lane change          other injury   \n",
       "9            highway                           speeding  property damage only   \n",
       "11              ramp                   improper turning                  pain   \n",
       "13           highway                           speeding  property damage only   \n",
       "...              ...                                ...                   ...   \n",
       "216286          ramp                           speeding         severe injury   \n",
       "216292       highway                           speeding  property damage only   \n",
       "216294       highway                           speeding          other injury   \n",
       "216296       highway                 wrong side of road                  pain   \n",
       "216297       highway                 unsafe lane change          other injury   \n",
       "\n",
       "                          lighting time_col  \n",
       "5       dark with no street lights       02  \n",
       "8                         daylight       09  \n",
       "9                         daylight       17  \n",
       "11                        daylight       09  \n",
       "13                        daylight       16  \n",
       "...                            ...      ...  \n",
       "216286     dark with street lights       18  \n",
       "216292                    daylight       09  \n",
       "216294                    daylight       14  \n",
       "216296                    daylight       12  \n",
       "216297     dark with street lights       05  \n",
       "\n",
       "[60760 rows x 9 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_2[['case_id', 'injured_victims', 'weather_1', 'county_city_location', 'location_type', 'pcf_violation_category', 'collision_severity','lighting', 'time_col']].dropna(axis = 0, how = 'any')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f3a0efc9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:28.875093Z",
     "iopub.status.busy": "2022-04-18T06:49:28.874786Z",
     "iopub.status.idle": "2022-04-18T06:49:29.050110Z",
     "shell.execute_reply": "2022-04-18T06:49:29.049174Z"
    },
    "papermill": {
     "duration": 0.252807,
     "end_time": "2022-04-18T06:49:29.052329",
     "exception": false,
     "start_time": "2022-04-18T06:49:28.799522",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>injured_victims</th>\n",
       "      <th>weather_1</th>\n",
       "      <th>county_city_location</th>\n",
       "      <th>location_type</th>\n",
       "      <th>pcf_violation_category</th>\n",
       "      <th>collision_severity</th>\n",
       "      <th>lighting</th>\n",
       "      <th>time_col</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3.098229e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>1941</td>\n",
       "      <td>highway</td>\n",
       "      <td>other than driver (or pedestrian)</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>dark with no street lights</td>\n",
       "      <td>02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2.607120e+05</td>\n",
       "      <td>1.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>3007</td>\n",
       "      <td>highway</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>other injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9.335011e+18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3801</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>daylight</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>8.612484e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3015</td>\n",
       "      <td>ramp</td>\n",
       "      <td>improper turning</td>\n",
       "      <td>pain</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>4.283125e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>1942</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>daylight</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216286</th>\n",
       "      <td>5.906362e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3603</td>\n",
       "      <td>ramp</td>\n",
       "      <td>speeding</td>\n",
       "      <td>severe injury</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216292</th>\n",
       "      <td>5.565961e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>111</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216294</th>\n",
       "      <td>8.001887e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>4316</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>other injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216296</th>\n",
       "      <td>3.388177e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>300</td>\n",
       "      <td>highway</td>\n",
       "      <td>wrong side of road</td>\n",
       "      <td>pain</td>\n",
       "      <td>daylight</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216297</th>\n",
       "      <td>8.749483e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3342</td>\n",
       "      <td>highway</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>other injury</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>60760 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             case_id  injured_victims weather_1  county_city_location  \\\n",
       "5       3.098229e+06              0.0     clear                  1941   \n",
       "8       2.607120e+05              1.0    cloudy                  3007   \n",
       "9       9.335011e+18              0.0     clear                  3801   \n",
       "11      8.612484e+06              1.0     clear                  3015   \n",
       "13      4.283125e+06              0.0     clear                  1942   \n",
       "...              ...              ...       ...                   ...   \n",
       "216286  5.906362e+06              1.0     clear                  3603   \n",
       "216292  5.565961e+06              0.0     clear                   111   \n",
       "216294  8.001887e+06              1.0     clear                  4316   \n",
       "216296  3.388177e+06              1.0    cloudy                   300   \n",
       "216297  8.749483e+06              1.0     clear                  3342   \n",
       "\n",
       "       location_type             pcf_violation_category    collision_severity  \\\n",
       "5            highway  other than driver (or pedestrian)  property damage only   \n",
       "8            highway                 unsafe lane change          other injury   \n",
       "9            highway                           speeding  property damage only   \n",
       "11              ramp                   improper turning                  pain   \n",
       "13           highway                           speeding  property damage only   \n",
       "...              ...                                ...                   ...   \n",
       "216286          ramp                           speeding         severe injury   \n",
       "216292       highway                           speeding  property damage only   \n",
       "216294       highway                           speeding          other injury   \n",
       "216296       highway                 wrong side of road                  pain   \n",
       "216297       highway                 unsafe lane change          other injury   \n",
       "\n",
       "                          lighting time_col  \n",
       "5       dark with no street lights       02  \n",
       "8                         daylight       09  \n",
       "9                         daylight       17  \n",
       "11                        daylight       09  \n",
       "13                        daylight       16  \n",
       "...                            ...      ...  \n",
       "216286     dark with street lights       18  \n",
       "216292                    daylight       09  \n",
       "216294                    daylight       14  \n",
       "216296                    daylight       12  \n",
       "216297     dark with street lights       05  \n",
       "\n",
       "[60760 rows x 9 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_training = training_2[['case_id', 'injured_victims', 'weather_1', 'county_city_location', 'location_type', 'pcf_violation_category', 'collision_severity','lighting', 'time_col']].dropna(axis = 0, how = 'any')\n",
    "cleaned_training"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cf0b48d",
   "metadata": {
    "papermill": {
     "duration": 0.075602,
     "end_time": "2022-04-18T06:49:29.202879",
     "exception": false,
     "start_time": "2022-04-18T06:49:29.127277",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Now exploring the Party set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "80be00d9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:29.357853Z",
     "iopub.status.busy": "2022-04-18T06:49:29.357566Z",
     "iopub.status.idle": "2022-04-18T06:49:29.658128Z",
     "shell.execute_reply": "2022-04-18T06:49:29.657429Z"
    },
    "papermill": {
     "duration": 0.380819,
     "end_time": "2022-04-18T06:49:29.660036",
     "exception": false,
     "start_time": "2022-04-18T06:49:29.279217",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>case_id</th>\n",
       "      <th>party_number</th>\n",
       "      <th>party_type</th>\n",
       "      <th>at_fault</th>\n",
       "      <th>party_sex</th>\n",
       "      <th>party_age</th>\n",
       "      <th>party_sobriety</th>\n",
       "      <th>party_drug_physical</th>\n",
       "      <th>direction_of_travel</th>\n",
       "      <th>...</th>\n",
       "      <th>other_associate_factor_2</th>\n",
       "      <th>party_number_killed</th>\n",
       "      <th>party_number_injured</th>\n",
       "      <th>movement_preceding_collision</th>\n",
       "      <th>vehicle_year</th>\n",
       "      <th>vehicle_make</th>\n",
       "      <th>statewide_vehicle_type</th>\n",
       "      <th>chp_vehicle_type_towing</th>\n",
       "      <th>chp_vehicle_type_towed</th>\n",
       "      <th>party_race</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>3511283.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>43.0</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>W</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>1991.0</td>\n",
       "      <td>HYUNDAI</td>\n",
       "      <td>motorcycle or scooter</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>17</td>\n",
       "      <td>3511283.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>0</td>\n",
       "      <td>male</td>\n",
       "      <td>28.0</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>2002.0</td>\n",
       "      <td>INTERNATIONAL HARVESTER</td>\n",
       "      <td>truck or truck tractor with trailer</td>\n",
       "      <td>25.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>535</td>\n",
       "      <td>3515256.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>25.0</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>making left turn</td>\n",
       "      <td>2004.0</td>\n",
       "      <td>FREIGHTLINER</td>\n",
       "      <td>truck or truck tractor with trailer</td>\n",
       "      <td>27.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>hispanic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>536</td>\n",
       "      <td>3515256.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>0</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>2007.0</td>\n",
       "      <td>HARLEY-DAVIDSON</td>\n",
       "      <td>motorcycle or scooter</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>black</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>579</td>\n",
       "      <td>3515353.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>59.0</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>backing</td>\n",
       "      <td>1998.0</td>\n",
       "      <td>HONDA</td>\n",
       "      <td>passenger car</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489857</th>\n",
       "      <td>13951689</td>\n",
       "      <td>90180387.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>W</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>HUSQ</td>\n",
       "      <td>motorcycle or scooter</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489858</th>\n",
       "      <td>14192890</td>\n",
       "      <td>90309377.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "      <td>W</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>other unsafe turning</td>\n",
       "      <td>2005.0</td>\n",
       "      <td>SUZU</td>\n",
       "      <td>motorcycle or scooter</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>hispanic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489859</th>\n",
       "      <td>14192891</td>\n",
       "      <td>90309377.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>0</td>\n",
       "      <td>female</td>\n",
       "      <td>33.0</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>DODG</td>\n",
       "      <td>passenger car</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489860</th>\n",
       "      <td>13119226</td>\n",
       "      <td>7127717.0</td>\n",
       "      <td>1</td>\n",
       "      <td>driver</td>\n",
       "      <td>0</td>\n",
       "      <td>male</td>\n",
       "      <td>24.0</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>changing lanes</td>\n",
       "      <td>1998.0</td>\n",
       "      <td>BMW</td>\n",
       "      <td>passenger car</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>hispanic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489861</th>\n",
       "      <td>13119227</td>\n",
       "      <td>7127717.0</td>\n",
       "      <td>2</td>\n",
       "      <td>driver</td>\n",
       "      <td>0</td>\n",
       "      <td>male</td>\n",
       "      <td>31.0</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>1984.0</td>\n",
       "      <td>YAMAHA</td>\n",
       "      <td>motorcycle or scooter</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>489862 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              id     case_id  party_number party_type  at_fault party_sex  \\\n",
       "0             16   3511283.0             1     driver         1    female   \n",
       "1             17   3511283.0             2     driver         0      male   \n",
       "2            535   3515256.0             1     driver         1      male   \n",
       "3            536   3515256.0             2     driver         0      male   \n",
       "4            579   3515353.0             1     driver         1      male   \n",
       "...          ...         ...           ...        ...       ...       ...   \n",
       "489857  13951689  90180387.0             1     driver         1      male   \n",
       "489858  14192890  90309377.0             1     driver         1      male   \n",
       "489859  14192891  90309377.0             2     driver         0    female   \n",
       "489860  13119226   7127717.0             1     driver         0      male   \n",
       "489861  13119227   7127717.0             2     driver         0      male   \n",
       "\n",
       "        party_age party_sobriety party_drug_physical direction_of_travel  ...  \\\n",
       "0            43.0              A                 NaN                   W  ...   \n",
       "1            28.0              A                 NaN                   S  ...   \n",
       "2            25.0              A                 NaN                   S  ...   \n",
       "3            35.0              A                 NaN                   E  ...   \n",
       "4            59.0              A                 NaN                   E  ...   \n",
       "...           ...            ...                 ...                 ...  ...   \n",
       "489857       47.0              A                 NaN                   W  ...   \n",
       "489858       43.0              B                 NaN                   W  ...   \n",
       "489859       33.0              A                 NaN                   E  ...   \n",
       "489860       24.0              A                 NaN                   E  ...   \n",
       "489861       31.0              A                 NaN                   E  ...   \n",
       "\n",
       "       other_associate_factor_2 party_number_killed party_number_injured  \\\n",
       "0                           NaN                   0                    1   \n",
       "1                           NaN                   0                    0   \n",
       "2                           NaN                   0                    0   \n",
       "3                           NaN                   0                    1   \n",
       "4                           NaN                   0                    0   \n",
       "...                         ...                 ...                  ...   \n",
       "489857                      NaN                   1                    0   \n",
       "489858                      NaN                   1                    0   \n",
       "489859                      NaN                   0                    0   \n",
       "489860                      NaN                   0                    0   \n",
       "489861                      NaN                   0                    1   \n",
       "\n",
       "       movement_preceding_collision vehicle_year             vehicle_make  \\\n",
       "0               proceeding straight       1991.0                  HYUNDAI   \n",
       "1               proceeding straight       2002.0  INTERNATIONAL HARVESTER   \n",
       "2                  making left turn       2004.0             FREIGHTLINER   \n",
       "3               proceeding straight       2007.0          HARLEY-DAVIDSON   \n",
       "4                           backing       1998.0                    HONDA   \n",
       "...                             ...          ...                      ...   \n",
       "489857          proceeding straight       2016.0                     HUSQ   \n",
       "489858         other unsafe turning       2005.0                     SUZU   \n",
       "489859          proceeding straight       2013.0                     DODG   \n",
       "489860               changing lanes       1998.0                      BMW   \n",
       "489861          proceeding straight       1984.0                   YAMAHA   \n",
       "\n",
       "                     statewide_vehicle_type  chp_vehicle_type_towing  \\\n",
       "0                     motorcycle or scooter                      2.0   \n",
       "1       truck or truck tractor with trailer                     25.0   \n",
       "2       truck or truck tractor with trailer                     27.0   \n",
       "3                     motorcycle or scooter                      2.0   \n",
       "4                             passenger car                      1.0   \n",
       "...                                     ...                      ...   \n",
       "489857                motorcycle or scooter                      2.0   \n",
       "489858                motorcycle or scooter                      2.0   \n",
       "489859                        passenger car                      1.0   \n",
       "489860                        passenger car                      1.0   \n",
       "489861                motorcycle or scooter                      2.0   \n",
       "\n",
       "        chp_vehicle_type_towed party_race  \n",
       "0                          0.0      white  \n",
       "1                         31.0      white  \n",
       "2                         31.0   hispanic  \n",
       "3                          0.0      black  \n",
       "4                          0.0      white  \n",
       "...                        ...        ...  \n",
       "489857                     NaN      white  \n",
       "489858                     NaN   hispanic  \n",
       "489859                     NaN      white  \n",
       "489860                     NaN   hispanic  \n",
       "489861                     NaN      white  \n",
       "\n",
       "[489862 rows x 31 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "party"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "072dc6d7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:29.813233Z",
     "iopub.status.busy": "2022-04-18T06:49:29.812717Z",
     "iopub.status.idle": "2022-04-18T06:49:30.468296Z",
     "shell.execute_reply": "2022-04-18T06:49:30.467579Z"
    },
    "papermill": {
     "duration": 0.733569,
     "end_time": "2022-04-18T06:49:30.470386",
     "exception": false,
     "start_time": "2022-04-18T06:49:29.736817",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                                   0\n",
       "case_id                              0\n",
       "party_number                         0\n",
       "party_type                         596\n",
       "at_fault                             0\n",
       "party_sex                        38091\n",
       "party_age                        45583\n",
       "party_sobriety                    9192\n",
       "party_drug_physical             435403\n",
       "direction_of_travel               7628\n",
       "party_safety_equipment_1         90703\n",
       "party_safety_equipment_2        129433\n",
       "financial_responsibility         42225\n",
       "hazardous_materials             489430\n",
       "cellphone_use                    80491\n",
       "school_bus_related              489265\n",
       "oaf_violation_code              488026\n",
       "oaf_violation_category          451293\n",
       "oaf_violation_section           435482\n",
       "oaf_violation_suffix            477301\n",
       "other_associate_factor_1         22911\n",
       "other_associate_factor_2        479175\n",
       "party_number_killed                  0\n",
       "party_number_injured                 0\n",
       "movement_preceding_collision      4931\n",
       "vehicle_year                     31917\n",
       "vehicle_make                     26732\n",
       "statewide_vehicle_type           10327\n",
       "chp_vehicle_type_towing          57113\n",
       "chp_vehicle_type_towed          250379\n",
       "party_race                       71040\n",
       "dtype: int64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "party.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "f6fff517",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:30.625025Z",
     "iopub.status.busy": "2022-04-18T06:49:30.624479Z",
     "iopub.status.idle": "2022-04-18T06:49:30.669010Z",
     "shell.execute_reply": "2022-04-18T06:49:30.668014Z"
    },
    "papermill": {
     "duration": 0.124239,
     "end_time": "2022-04-18T06:49:30.671313",
     "exception": false,
     "start_time": "2022-04-18T06:49:30.547074",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>at_fault</th>\n",
       "      <th>party_sex</th>\n",
       "      <th>party_age</th>\n",
       "      <th>party_sobriety</th>\n",
       "      <th>party_safety_equipment_1</th>\n",
       "      <th>cellphone_use</th>\n",
       "      <th>movement_preceding_collision</th>\n",
       "      <th>party_race</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3511283.0</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>43.0</td>\n",
       "      <td>A</td>\n",
       "      <td>M</td>\n",
       "      <td>3</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3511283.0</td>\n",
       "      <td>0</td>\n",
       "      <td>male</td>\n",
       "      <td>28.0</td>\n",
       "      <td>A</td>\n",
       "      <td>L</td>\n",
       "      <td>3</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3515256.0</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>25.0</td>\n",
       "      <td>A</td>\n",
       "      <td>P</td>\n",
       "      <td>3</td>\n",
       "      <td>making left turn</td>\n",
       "      <td>hispanic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3515256.0</td>\n",
       "      <td>0</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>A</td>\n",
       "      <td>P</td>\n",
       "      <td>3</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>black</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3515353.0</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>59.0</td>\n",
       "      <td>A</td>\n",
       "      <td>M</td>\n",
       "      <td>3</td>\n",
       "      <td>backing</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489857</th>\n",
       "      <td>90180387.0</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489858</th>\n",
       "      <td>90309377.0</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>B</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>other unsafe turning</td>\n",
       "      <td>hispanic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489859</th>\n",
       "      <td>90309377.0</td>\n",
       "      <td>0</td>\n",
       "      <td>female</td>\n",
       "      <td>33.0</td>\n",
       "      <td>A</td>\n",
       "      <td>L</td>\n",
       "      <td>3</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489860</th>\n",
       "      <td>7127717.0</td>\n",
       "      <td>0</td>\n",
       "      <td>male</td>\n",
       "      <td>24.0</td>\n",
       "      <td>A</td>\n",
       "      <td>M</td>\n",
       "      <td>3</td>\n",
       "      <td>changing lanes</td>\n",
       "      <td>hispanic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489861</th>\n",
       "      <td>7127717.0</td>\n",
       "      <td>0</td>\n",
       "      <td>male</td>\n",
       "      <td>31.0</td>\n",
       "      <td>A</td>\n",
       "      <td>P</td>\n",
       "      <td>3</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>489862 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           case_id  at_fault party_sex  party_age party_sobriety  \\\n",
       "0        3511283.0         1    female       43.0              A   \n",
       "1        3511283.0         0      male       28.0              A   \n",
       "2        3515256.0         1      male       25.0              A   \n",
       "3        3515256.0         0      male       35.0              A   \n",
       "4        3515353.0         1      male       59.0              A   \n",
       "...            ...       ...       ...        ...            ...   \n",
       "489857  90180387.0         1      male       47.0              A   \n",
       "489858  90309377.0         1      male       43.0              B   \n",
       "489859  90309377.0         0    female       33.0              A   \n",
       "489860   7127717.0         0      male       24.0              A   \n",
       "489861   7127717.0         0      male       31.0              A   \n",
       "\n",
       "       party_safety_equipment_1 cellphone_use movement_preceding_collision  \\\n",
       "0                             M             3          proceeding straight   \n",
       "1                             L             3          proceeding straight   \n",
       "2                             P             3             making left turn   \n",
       "3                             P             3          proceeding straight   \n",
       "4                             M             3                      backing   \n",
       "...                         ...           ...                          ...   \n",
       "489857                      NaN             3          proceeding straight   \n",
       "489858                      NaN             3         other unsafe turning   \n",
       "489859                        L             3          proceeding straight   \n",
       "489860                        M             3               changing lanes   \n",
       "489861                        P             3          proceeding straight   \n",
       "\n",
       "       party_race  \n",
       "0           white  \n",
       "1           white  \n",
       "2        hispanic  \n",
       "3           black  \n",
       "4           white  \n",
       "...           ...  \n",
       "489857      white  \n",
       "489858   hispanic  \n",
       "489859      white  \n",
       "489860   hispanic  \n",
       "489861      white  \n",
       "\n",
       "[489862 rows x 9 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_party = party[['case_id', 'at_fault', 'party_sex','party_age','party_sobriety','party_safety_equipment_1','cellphone_use','movement_preceding_collision','party_race']]\n",
    "cleaned_party"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0cf9d0c",
   "metadata": {
    "papermill": {
     "duration": 0.075661,
     "end_time": "2022-04-18T06:49:30.822945",
     "exception": false,
     "start_time": "2022-04-18T06:49:30.747284",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "##### Now exploring the victim set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ca715f3d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:30.977196Z",
     "iopub.status.busy": "2022-04-18T06:49:30.976677Z",
     "iopub.status.idle": "2022-04-18T06:49:31.000978Z",
     "shell.execute_reply": "2022-04-18T06:49:31.000118Z"
    },
    "papermill": {
     "duration": 0.104147,
     "end_time": "2022-04-18T06:49:31.003080",
     "exception": false,
     "start_time": "2022-04-18T06:49:30.898933",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>case_id</th>\n",
       "      <th>party_number</th>\n",
       "      <th>victim_role</th>\n",
       "      <th>victim_sex</th>\n",
       "      <th>victim_age</th>\n",
       "      <th>victim_degree_of_injury</th>\n",
       "      <th>victim_seating_position</th>\n",
       "      <th>victim_safety_equipment_1</th>\n",
       "      <th>victim_safety_equipment_2</th>\n",
       "      <th>victim_ejected</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>3511283.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>43.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "      <td>G</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>247</td>\n",
       "      <td>3515256.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>complaint of pain</td>\n",
       "      <td>1</td>\n",
       "      <td>P</td>\n",
       "      <td>W</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>265</td>\n",
       "      <td>3515353.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>34.0</td>\n",
       "      <td>killed</td>\n",
       "      <td>1</td>\n",
       "      <td>W</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>699</td>\n",
       "      <td>3522552.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "      <td>G</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>700</td>\n",
       "      <td>3522552.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>killed</td>\n",
       "      <td>1</td>\n",
       "      <td>P</td>\n",
       "      <td>W</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322689</th>\n",
       "      <td>7254152</td>\n",
       "      <td>7151871.0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>no injury</td>\n",
       "      <td>3.0</td>\n",
       "      <td>M</td>\n",
       "      <td>G</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322690</th>\n",
       "      <td>7358398</td>\n",
       "      <td>8055581.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>48.0</td>\n",
       "      <td>severe injury</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "      <td>W</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322691</th>\n",
       "      <td>7685444</td>\n",
       "      <td>90180387.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>killed</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "      <td>W</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322692</th>\n",
       "      <td>7828718</td>\n",
       "      <td>90309377.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>killed</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "      <td>W</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322693</th>\n",
       "      <td>7246653</td>\n",
       "      <td>7127717.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>male</td>\n",
       "      <td>31.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "      <td>W</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>322694 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             id     case_id  party_number  victim_role victim_sex  victim_age  \\\n",
       "0             4   3511283.0             1            1     female        43.0   \n",
       "1           247   3515256.0             2            1       male        35.0   \n",
       "2           265   3515353.0             2            1       male        34.0   \n",
       "3           699   3522552.0             1            1       male        47.0   \n",
       "4           700   3522552.0             2            1       male        43.0   \n",
       "...         ...         ...           ...          ...        ...         ...   \n",
       "322689  7254152   7151871.0             2            2       male         NaN   \n",
       "322690  7358398   8055581.0             1            1       male        48.0   \n",
       "322691  7685444  90180387.0             1            1       male        47.0   \n",
       "322692  7828718  90309377.0             1            1       male        43.0   \n",
       "322693  7246653   7127717.0             2            1       male        31.0   \n",
       "\n",
       "       victim_degree_of_injury victim_seating_position  \\\n",
       "0         other visible injury                       1   \n",
       "1            complaint of pain                       1   \n",
       "2                       killed                       1   \n",
       "3         other visible injury                       1   \n",
       "4                       killed                       1   \n",
       "...                        ...                     ...   \n",
       "322689               no injury                     3.0   \n",
       "322690           severe injury                     1.0   \n",
       "322691                  killed                     1.0   \n",
       "322692                  killed                     1.0   \n",
       "322693    other visible injury                     1.0   \n",
       "\n",
       "       victim_safety_equipment_1 victim_safety_equipment_2  victim_ejected  \n",
       "0                              M                         G             0.0  \n",
       "1                              P                         W             1.0  \n",
       "2                              W                       NaN             1.0  \n",
       "3                              M                         G             0.0  \n",
       "4                              P                         W             1.0  \n",
       "...                          ...                       ...             ...  \n",
       "322689                         M                         G             0.0  \n",
       "322690                         P                         W             1.0  \n",
       "322691                         P                         W             1.0  \n",
       "322692                         P                         W             1.0  \n",
       "322693                         P                         W             1.0  \n",
       "\n",
       "[322694 rows x 11 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "victim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "79eb1fe3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:31.161793Z",
     "iopub.status.busy": "2022-04-18T06:49:31.161039Z",
     "iopub.status.idle": "2022-04-18T06:49:31.302658Z",
     "shell.execute_reply": "2022-04-18T06:49:31.301573Z"
    },
    "papermill": {
     "duration": 0.22437,
     "end_time": "2022-04-18T06:49:31.305114",
     "exception": false,
     "start_time": "2022-04-18T06:49:31.080744",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                               0\n",
       "case_id                          0\n",
       "party_number                     0\n",
       "victim_role                      0\n",
       "victim_sex                    7015\n",
       "victim_age                    5100\n",
       "victim_degree_of_injury          0\n",
       "victim_seating_position        232\n",
       "victim_safety_equipment_1    14833\n",
       "victim_safety_equipment_2    77016\n",
       "victim_ejected                 911\n",
       "dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "victim.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "34374a25",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:31.465531Z",
     "iopub.status.busy": "2022-04-18T06:49:31.465235Z",
     "iopub.status.idle": "2022-04-18T06:49:31.586261Z",
     "shell.execute_reply": "2022-04-18T06:49:31.585268Z"
    },
    "papermill": {
     "duration": 0.203166,
     "end_time": "2022-04-18T06:49:31.588360",
     "exception": false,
     "start_time": "2022-04-18T06:49:31.385194",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>victim_sex</th>\n",
       "      <th>victim_age</th>\n",
       "      <th>victim_seating_position</th>\n",
       "      <th>victim_safety_equipment_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3511283.0</td>\n",
       "      <td>female</td>\n",
       "      <td>43.0</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3515256.0</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3515353.0</td>\n",
       "      <td>male</td>\n",
       "      <td>34.0</td>\n",
       "      <td>1</td>\n",
       "      <td>W</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3522552.0</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3522552.0</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>1</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322688</th>\n",
       "      <td>7151871.0</td>\n",
       "      <td>male</td>\n",
       "      <td>50.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322690</th>\n",
       "      <td>8055581.0</td>\n",
       "      <td>male</td>\n",
       "      <td>48.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322691</th>\n",
       "      <td>90180387.0</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322692</th>\n",
       "      <td>90309377.0</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322693</th>\n",
       "      <td>7127717.0</td>\n",
       "      <td>male</td>\n",
       "      <td>31.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>299045 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           case_id victim_sex  victim_age victim_seating_position  \\\n",
       "0        3511283.0     female        43.0                       1   \n",
       "1        3515256.0       male        35.0                       1   \n",
       "2        3515353.0       male        34.0                       1   \n",
       "3        3522552.0       male        47.0                       1   \n",
       "4        3522552.0       male        43.0                       1   \n",
       "...            ...        ...         ...                     ...   \n",
       "322688   7151871.0       male        50.0                     1.0   \n",
       "322690   8055581.0       male        48.0                     1.0   \n",
       "322691  90180387.0       male        47.0                     1.0   \n",
       "322692  90309377.0       male        43.0                     1.0   \n",
       "322693   7127717.0       male        31.0                     1.0   \n",
       "\n",
       "       victim_safety_equipment_1  \n",
       "0                              M  \n",
       "1                              P  \n",
       "2                              W  \n",
       "3                              M  \n",
       "4                              P  \n",
       "...                          ...  \n",
       "322688                         P  \n",
       "322690                         P  \n",
       "322691                         P  \n",
       "322692                         P  \n",
       "322693                         P  \n",
       "\n",
       "[299045 rows x 5 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_victim = victim[['case_id', 'victim_sex','victim_age','victim_seating_position','victim_safety_equipment_1']].dropna(axis = 0, how = 'any')\n",
    "cleaned_victim"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0444245b",
   "metadata": {
    "papermill": {
     "duration": 0.077933,
     "end_time": "2022-04-18T06:49:31.744262",
     "exception": false,
     "start_time": "2022-04-18T06:49:31.666329",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Analyzing Party Information"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "755c5939",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:31.903302Z",
     "iopub.status.busy": "2022-04-18T06:49:31.902880Z",
     "iopub.status.idle": "2022-04-18T06:49:32.267907Z",
     "shell.execute_reply": "2022-04-18T06:49:32.266983Z"
    },
    "papermill": {
     "duration": 0.446785,
     "end_time": "2022-04-18T06:49:32.270271",
     "exception": false,
     "start_time": "2022-04-18T06:49:31.823486",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>injured_victims</th>\n",
       "      <th>weather_1</th>\n",
       "      <th>county_city_location</th>\n",
       "      <th>location_type</th>\n",
       "      <th>pcf_violation_category</th>\n",
       "      <th>collision_severity</th>\n",
       "      <th>lighting</th>\n",
       "      <th>time_col</th>\n",
       "      <th>at_fault</th>\n",
       "      <th>party_sex</th>\n",
       "      <th>party_age</th>\n",
       "      <th>party_sobriety</th>\n",
       "      <th>party_safety_equipment_1</th>\n",
       "      <th>cellphone_use</th>\n",
       "      <th>movement_preceding_collision</th>\n",
       "      <th>party_race</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3.098229e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>1941</td>\n",
       "      <td>highway</td>\n",
       "      <td>other than driver (or pedestrian)</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>dark with no street lights</td>\n",
       "      <td>02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>female</td>\n",
       "      <td>27.0</td>\n",
       "      <td>A</td>\n",
       "      <td>M</td>\n",
       "      <td>3</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3.098229e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>1941</td>\n",
       "      <td>highway</td>\n",
       "      <td>other than driver (or pedestrian)</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>dark with no street lights</td>\n",
       "      <td>02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>H</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>stopped</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.607120e+05</td>\n",
       "      <td>1.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>3007</td>\n",
       "      <td>highway</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>other injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "      <td>1.0</td>\n",
       "      <td>female</td>\n",
       "      <td>22.0</td>\n",
       "      <td>A</td>\n",
       "      <td>G</td>\n",
       "      <td>C</td>\n",
       "      <td>changing lanes</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2.607120e+05</td>\n",
       "      <td>1.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>3007</td>\n",
       "      <td>highway</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>other injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "      <td>0.0</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>A</td>\n",
       "      <td>W</td>\n",
       "      <td>C</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9.335011e+18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3801</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>daylight</td>\n",
       "      <td>17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>male</td>\n",
       "      <td>43.0</td>\n",
       "      <td>A</td>\n",
       "      <td>G</td>\n",
       "      <td>C</td>\n",
       "      <td>stopped</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107840</th>\n",
       "      <td>8.001887e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>4316</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>other injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>14</td>\n",
       "      <td>1.0</td>\n",
       "      <td>male</td>\n",
       "      <td>44.0</td>\n",
       "      <td>G</td>\n",
       "      <td>P</td>\n",
       "      <td>3</td>\n",
       "      <td>slowing/stopping</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107841</th>\n",
       "      <td>8.001887e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>4316</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>other injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>14</td>\n",
       "      <td>0.0</td>\n",
       "      <td>male</td>\n",
       "      <td>53.0</td>\n",
       "      <td>A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>stopped</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107842</th>\n",
       "      <td>3.388177e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>300</td>\n",
       "      <td>highway</td>\n",
       "      <td>wrong side of road</td>\n",
       "      <td>pain</td>\n",
       "      <td>daylight</td>\n",
       "      <td>12</td>\n",
       "      <td>1.0</td>\n",
       "      <td>male</td>\n",
       "      <td>44.0</td>\n",
       "      <td>A</td>\n",
       "      <td>P</td>\n",
       "      <td>3</td>\n",
       "      <td>ran off road</td>\n",
       "      <td>hispanic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107843</th>\n",
       "      <td>8.749483e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3342</td>\n",
       "      <td>highway</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>other injury</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>male</td>\n",
       "      <td>23.0</td>\n",
       "      <td>A</td>\n",
       "      <td>P</td>\n",
       "      <td>3</td>\n",
       "      <td>proceeding straight</td>\n",
       "      <td>white</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107844</th>\n",
       "      <td>8.749483e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3342</td>\n",
       "      <td>highway</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>other injury</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>05</td>\n",
       "      <td>1.0</td>\n",
       "      <td>male</td>\n",
       "      <td>56.0</td>\n",
       "      <td>A</td>\n",
       "      <td>P</td>\n",
       "      <td>3</td>\n",
       "      <td>changing lanes</td>\n",
       "      <td>asian</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>107845 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             case_id  injured_victims weather_1  county_city_location  \\\n",
       "0       3.098229e+06              0.0     clear                  1941   \n",
       "1       3.098229e+06              0.0     clear                  1941   \n",
       "2       2.607120e+05              1.0    cloudy                  3007   \n",
       "3       2.607120e+05              1.0    cloudy                  3007   \n",
       "4       9.335011e+18              0.0     clear                  3801   \n",
       "...              ...              ...       ...                   ...   \n",
       "107840  8.001887e+06              1.0     clear                  4316   \n",
       "107841  8.001887e+06              1.0     clear                  4316   \n",
       "107842  3.388177e+06              1.0    cloudy                   300   \n",
       "107843  8.749483e+06              1.0     clear                  3342   \n",
       "107844  8.749483e+06              1.0     clear                  3342   \n",
       "\n",
       "       location_type             pcf_violation_category    collision_severity  \\\n",
       "0            highway  other than driver (or pedestrian)  property damage only   \n",
       "1            highway  other than driver (or pedestrian)  property damage only   \n",
       "2            highway                 unsafe lane change          other injury   \n",
       "3            highway                 unsafe lane change          other injury   \n",
       "4            highway                           speeding  property damage only   \n",
       "...              ...                                ...                   ...   \n",
       "107840       highway                           speeding          other injury   \n",
       "107841       highway                           speeding          other injury   \n",
       "107842       highway                 wrong side of road                  pain   \n",
       "107843       highway                 unsafe lane change          other injury   \n",
       "107844       highway                 unsafe lane change          other injury   \n",
       "\n",
       "                          lighting time_col  at_fault party_sex  party_age  \\\n",
       "0       dark with no street lights       02       0.0    female       27.0   \n",
       "1       dark with no street lights       02       0.0       NaN        NaN   \n",
       "2                         daylight       09       1.0    female       22.0   \n",
       "3                         daylight       09       0.0      male       32.0   \n",
       "4                         daylight       17       0.0      male       43.0   \n",
       "...                            ...      ...       ...       ...        ...   \n",
       "107840                    daylight       14       1.0      male       44.0   \n",
       "107841                    daylight       14       0.0      male       53.0   \n",
       "107842                    daylight       12       1.0      male       44.0   \n",
       "107843     dark with street lights       05       0.0      male       23.0   \n",
       "107844     dark with street lights       05       1.0      male       56.0   \n",
       "\n",
       "       party_sobriety party_safety_equipment_1 cellphone_use  \\\n",
       "0                   A                        M             3   \n",
       "1                   H                      NaN             3   \n",
       "2                   A                        G             C   \n",
       "3                   A                        W             C   \n",
       "4                   A                        G             C   \n",
       "...               ...                      ...           ...   \n",
       "107840              G                        P             3   \n",
       "107841              A                      NaN             3   \n",
       "107842              A                        P             3   \n",
       "107843              A                        P             3   \n",
       "107844              A                        P             3   \n",
       "\n",
       "       movement_preceding_collision party_race  \n",
       "0               proceeding straight      white  \n",
       "1                           stopped        NaN  \n",
       "2                    changing lanes      white  \n",
       "3               proceeding straight      white  \n",
       "4                           stopped        NaN  \n",
       "...                             ...        ...  \n",
       "107840             slowing/stopping      other  \n",
       "107841                      stopped      other  \n",
       "107842                 ran off road   hispanic  \n",
       "107843          proceeding straight      white  \n",
       "107844               changing lanes      asian  \n",
       "\n",
       "[107845 rows x 17 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_with_party = cleaned_training.merge(cleaned_party, on = 'case_id', how = 'left')\n",
    "training_with_party"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "b6b435d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:32.433493Z",
     "iopub.status.busy": "2022-04-18T06:49:32.432624Z",
     "iopub.status.idle": "2022-04-18T06:49:32.851392Z",
     "shell.execute_reply": "2022-04-18T06:49:32.850426Z"
    },
    "papermill": {
     "duration": 0.503051,
     "end_time": "2022-04-18T06:49:32.853938",
     "exception": false,
     "start_time": "2022-04-18T06:49:32.350887",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='party_sobriety', ylabel='Count'>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZEAAAEHCAYAAABvHnsJAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAAUpUlEQVR4nO3de7SddX3n8ffHRC5eAckwmoQmaqoDWKlGRG1nLaGDwaENdhChLkFLxangeGmtMLOmrGXLqq66isUqSoFyKW2gqCNaNGW41PGGhIsgICWDgwQvRIPQ0bE08J0/9u/oNpwkh1/OPjs7eb/WOus8z+/5Pc/+/pKzzuc891QVkiT1eMK4C5AkTS5DRJLUzRCRJHUzRCRJ3QwRSVK3+eMuYK7tvffetWTJknGXIUkT44Ybbvh+VS2YbtlOFyJLlixhzZo14y5DkiZGkns2t8zDWZKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSpmyEiSepmiEiSuhkikqRuhsjjsHDxviTZIb4WLt533P+cknYAO91jT7bFt9fdy+s+9qVxlzErLnnLy8ddgqQdgHsikqRuhogkqZshIknqZohIkroZIpKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSpmyEiSepmiEiSuhkikqRuhogkqZshIknqZohIkroZIpKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSpmyEiSepmiEiSuhkikqRuhogkqdtIQyTJO5PcluTrSf42yW5Jlia5LsnaJJck2aX13bXNr23Llwxt59TWfmeSVw21r2hta5OcMsqxSJIea2QhkmQh8F+A5VV1ADAPOAZ4P3BGVT0XeAA4oa1yAvBAaz+j9SPJfm29/YEVwEeSzEsyD/gwcDiwH3Bs6ytJmiOjPpw1H9g9yXzgScB3gEOAy9ryC4Aj2/TKNk9bfmiStPZVVfUvVfVNYC1wUPtaW1V3V9XDwKrWV5I0R0YWIlV1H/AB4FsMwuNB4Abgh1W1sXVbByxs0wuBe9u6G1v/Zwy3b7LO5tofI8mJSdYkWbN+/fptH5wkCRjt4aw9GewZLAWeBTyZweGoOVdVZ1fV8qpavmDBgnGUIEk7pFEezvo14JtVtb6q/hX4BPAKYI92eAtgEXBfm74PWAzQlj8d+MFw+ybrbK5dkjRHRhki3wIOTvKkdm7jUOB24BrgqNbneOBTbfryNk9bfnVVVWs/pl29tRRYBnwVuB5Y1q722oXByffLRzgeSdIm5m+9S5+qui7JZcCNwEbgJuBs4O+BVUn+uLWd21Y5F7goyVpgA4NQoKpuS3IpgwDaCJxUVY8AJDkZWM3gyq/zquq2UY1HkvRYIwsRgKo6DThtk+a7GVxZtWnfnwCv3cx2TgdOn6b9CuCKba9UktTDO9YlSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1G2kIZJkjySXJflGkjuSvCzJXkmuTHJX+75n65skZyZZm+SWJC8a2s7xrf9dSY4fan9xklvbOmcmySjHI0n6eaPeE/lz4HNV9XzghcAdwCnAVVW1DLiqzQMcDixrXycCZwEk2Qs4DXgpcBBw2lTwtD5vHlpvxYjHI0kaMrIQSfJ04N8D5wJU1cNV9UNgJXBB63YBcGSbXglcWANfAfZI8kzgVcCVVbWhqh4ArgRWtGVPq6qvVFUBFw5tS5I0B0a5J7IUWA/8VZKbkpyT5MnAPlX1ndbnu8A+bXohcO/Q+uta25ba103T/hhJTkyyJsma9evXb+OwJElTRhki84EXAWdV1S8DP+Jnh64AaHsQNcIapj7n7KpaXlXLFyxYMOqPk6SdxihDZB2wrqqua/OXMQiV77VDUbTv97fl9wGLh9Zf1Nq21L5omnZJ0hwZWYhU1XeBe5M8rzUdCtwOXA5MXWF1PPCpNn05cFy7Sutg4MF22Gs1cFiSPdsJ9cOA1W3ZQ0kObldlHTe0LUnSHJg/4u2/Dbg4yS7A3cCbGATXpUlOAO4Bjm59rwBeDawFftz6UlUbkvwRcH3r996q2tCm3wqcD+wOfLZ9SZLmyEhDpKpuBpZPs+jQafoWcNJmtnMecN407WuAA7atSklSL+9YlyR1M0QkSd0MEUlSN0NEktTNEJEkdZtRiCR5xUzaJEk7l5nuiXxohm2SpJ3IFu8TSfIy4OXAgiTvGlr0NGDeKAuTJG3/tnaz4S7AU1q/pw61PwQcNaqiJEmTYYshUlX/CPxjkvOr6p45qkmSNCFm+tiTXZOcDSwZXqeqDhlFUZKkyTDTEPk74KPAOcAjoytHkjRJZhoiG6vqrJFWIkmaODO9xPfTSd6a5JlJ9pr6GmllkqTt3kz3RKZeIvXuobYCnj275UiSJsmMQqSqlo66EEnS5JlRiCQ5brr2qrpwdsuRJE2SmR7OesnQ9G4M3kx4I2CISNJObKaHs942PJ9kD2DVKAqSJE2O3kfB/wjwPIkk7eRmek7k0wyuxoLBgxf/HXDpqIqSJE2GmZ4T+cDQ9EbgnqpaN4J6JEkTZEaHs9qDGL/B4Em+ewIPj7IoSdJkmOmbDY8Gvgq8FjgauC6Jj4KXpJ3cTA9n/TfgJVV1P0CSBcD/BC4bVWGSpO3fTK/OesJUgDQ/eBzrSpJ2UDPdE/lcktXA37b51wFXjKYkSdKk2No71p8L7FNV707ym8CvtEVfBi4edXGSpO3b1vZEPgicClBVnwA+AZDkBW3Zr4+wNknSdm5r5zX2qapbN21sbUtGUpEkaWJsLUT22MKy3WexDknSBNpaiKxJ8uZNG5P8DnDDaEqSJE2KrZ0TeQfwySSv52ehsRzYBXjNCOuSJE2ALYZIVX0PeHmSVwIHtOa/r6qrR16ZJGm7N9P3iVwDXDPiWiRJE2bkd50nmZfkpiSfafNLk1yXZG2SS5Ls0tp3bfNr2/IlQ9s4tbXfmeRVQ+0rWtvaJKeMeiySpJ83F48ueTtwx9D8+4Ezquq5wAPACa39BOCB1n5G60eS/YBjgP2BFcBHWjDNAz4MHA7sBxzb+kqS5shIQyTJIuA/Aue0+QCH8LMHN14AHNmmV7Z52vJDW/+VwKqq+peq+iawFjiofa2tqrur6mEGr+tdOcrxSJJ+3qj3RD4I/AHwaJt/BvDDqtrY5tcBC9v0QuBegLb8wdb/p+2brLO59sdIcmKSNUnWrF+/fhuHJEmaMrIQSXIEcH9Vjf1+kqo6u6qWV9XyBQsWjLscSdphzPQpvj1eAfxGklcDuwFPA/4c2CPJ/La3sQi4r/W/D1gMrEsyH3g6g0fOT7VPGV5nc+2SpDkwsj2Rqjq1qhZV1RIGJ8avrqrXM7hUeOqtiMcDn2rTl7d52vKrq6pa+zHt6q2lwDIGb1m8HljWrvbapX3G5aMajyTpsUa5J7I57wFWJflj4Cbg3NZ+LnBRkrXABgahQFXdluRS4HZgI3BSVT0CkORkYDUwDzivqm6b05FI0k5uTkKkqq4Frm3TdzO4smrTPj9h8A736dY/HTh9mvYr8OVYkjQ2vuJWktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd1GFiJJFie5JsntSW5L8vbWvleSK5Pc1b7v2dqT5Mwka5PckuRFQ9s6vvW/K8nxQ+0vTnJrW+fMJBnVeCRJjzXKPZGNwO9V1X7AwcBJSfYDTgGuqqplwFVtHuBwYFn7OhE4CwahA5wGvBQ4CDhtKnhanzcPrbdihOORJG1iZCFSVd+pqhvb9D8DdwALgZXABa3bBcCRbXolcGENfAXYI8kzgVcBV1bVhqp6ALgSWNGWPa2qvlJVBVw4tC1J0hyYk3MiSZYAvwxcB+xTVd9pi74L7NOmFwL3Dq22rrVtqX3dNO3Tff6JSdYkWbN+/fptG4wk6adGHiJJngJ8HHhHVT00vKztQdSoa6iqs6tqeVUtX7Bgwag/TpJ2GiMNkSRPZBAgF1fVJ1rz99qhKNr3+1v7fcDiodUXtbYttS+apl2SNEdGeXVWgHOBO6rqz4YWXQ5MXWF1PPCpofbj2lVaBwMPtsNeq4HDkuzZTqgfBqxuyx5KcnD7rOOGtiVJmgPzR7jtVwBvAG5NcnNr+6/A+4BLk5wA3AMc3ZZdAbwaWAv8GHgTQFVtSPJHwPWt33urakObfitwPrA78Nn2JUmaIyMLkar6ArC5+zYOnaZ/ASdtZlvnAedN074GOGAbypQkbQPvWJckdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEE23h4n1JskN8LVy877j/OaXHbf64C5C2xbfX3cvrPvalcZcxKy55y8vHXYL0uLknIknqZohIkroZIpKkboaIJKmbISJJ6maISJK6GSKSZt2Ocv+O9+5snfeJSJp1O8r9O967s3XuiUiSuhkikqRuEx8iSVYkuTPJ2iSnjLseSdqZTPQ5kSTzgA8D/wFYB1yf5PKqun28lU2AJ8wnybir0DD/TzSBJjpEgIOAtVV1N0CSVcBKwBDZmkc3euJze7OD/J/ADvT/sgMF+7MWLea+e78169tNVc36RudKkqOAFVX1O23+DcBLq+rkTfqdCJzYZp8H3DmnhT4+ewPfH3cRs8SxbH92lHGAY5lLv1BVC6ZbMOl7IjNSVWcDZ4+7jplIsqaqlo+7jtngWLY/O8o4wLFsLyb9xPp9wOKh+UWtTZI0ByY9RK4HliVZmmQX4Bjg8jHXJEk7jYk+nFVVG5OcDKwG5gHnVdVtYy5rW03EYbcZcizbnx1lHOBYtgsTfWJdkjRek344S5I0RoaIJKmbIbIdSXJkkkry/HHX0ivJ/91k/o1J/mJc9WyLJPsk+Zskdye5IcmXk7xm3HX1SPJvk6xK8r/bWK5I8ovjrqtHkkeS3Jzka0luTDKRdzYOjeO2NpbfSzJxv5MnruAd3LHAF9p3jVEGtyn/D+DzVfXsqnoxg6v/Fo21sA5tLJ8Erq2q57SxnArsM97Kuv2/qjqwql7IYBx/Mu6COk2NY38Gj246HDhtzDU9bobIdiLJU4BfAU5g8MtK43UI8HBVfXSqoaruqaoPjbGmXq8E/nWTsXytqv7XGGuaLU8DHhh3Eduqqu5n8FSNkzNhz1mZ6Et8dzArgc9V1T8l+UGSF1fVDeMuqsPuSW4emt+Lybx3Z3/gxnEXMUsOACbxZ2lzpn7GdgOeySDwJ15V3d0eKvtvgO+Nu56Zck9k+3EssKpNr2JyD2lN7aIfWFUHAn847oJmQ5IPt+PW14+7Fv30Z+z5wArgwkn7631H4p7IdiDJXgz+mnpBkmJw42QleXd5I8+43Ab8p6mZqjopyd7AmvGV1O024KhxFzEKVfXl9v+yALh/3PVsiyTPBh5hwsbhnsj24Sjgoqr6hapaUlWLgW8CvzrmunZmVwO7JfndobYnjauYbXQ1sGt7mjUASX4pycT/fLUrGecBPxh3LdsiyQLgo8BfTNofju6JbB+OBd6/SdvHW/vn574cVVUlORI4I8kfAOuBHwHvGWthHdpYXgN8MMl7gJ8A/wd4xzjr2gbD590CHF9Vj4yxnl5T43gisBG4CPizsVbUwceeSJK6eThLktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRKRt0B7fv98cfM75SbZ613mSZyW5bCt9liT5rdmrTjszQ0TqlGQ+cCQw8hCZiSTzq+rbVbW1sFkCGCKaFYaIdmrtr/JvJLk4yR1JLkvypCR/mOT6JF9PcvbUA/6SXJvkg0nWMLh7/TeAP20vF3pOkhuHtr1seH6az35fktuT3JLkA0P1XN3arkqy79Aqv5ZkTZJ/SnJE6//GJJcnuRq4qq3/9bZsXpI/beO4Jclb2nbeB/xqq/mdST6f5MChur6Q5IWz8e+rHZ+PPZHgecAJVfXFJOcBb2XwDKP3AiS5CDgC+HTrv0tVLW/LlgGfqarL2vyDSQ6sqpuBNwF/Nd0HJnkG8Brg+e2xJHu0RR8CLqiqC5L8NnAmg70dGOxBHAQ8B7gmyXNb+4uAX6qqDUmWDH3MCcCDVfWSJLsCX0zyD8ApwO9X1VQQbQDeCLyjve1wt6r62uP6F9ROyz0RCe6tqi+26b9m8HKwVya5LsmtDJ6wvP9Q/0u2sK1zgDe190K8DvibzfR7kMEzrM5N8pvAj1v7y4bWuajVMuXSqnq0qu4C7gamXqN8ZVVtmOYzDgOOa89nug54BrBsmn5/BxyR5InAbwPnb2F80s8xRCTY9AFyBXwEOKqqXgD8JYMXIE350Ra29XEGrzk9ArihqqZ9umxVbWSwV3FZ6/u5zjq3VE+Atw2932VpVf3DNLX8GLiSwYvRjgYunkEtEmCISAD7JnlZm/4tBu+5B/h+e23xlk5U/zPw1KmZqvoJsBo4i80cyoKfvg756VV1BfBOYOocxJf42euRXw8Mv8L2tUmekOQ5wLOBO7cyrtXA77Y9DJL8YpInb1pzcw6DQ2fXV9XEv25Wc8cQkQa/jE9KcgewJ4MA+Evg6wx+EW/pbYargHcnuan9cofBX/KPAo/5q3/IU4HPJLmFQWi9q7W/jcHhsFuANwBvH1rnW8BXgc8C/7kF1pacA9wO3NhOtn+MwXnQW4BH2psa3wnQXsX8EFsIPmk6PgpeO7V2IvozVXXALG7z9xnsZfz32drmqCV5FnAtgxP9j465HE0Qr86SZlGSTzK4euqQcdcyU0mOA04H3mWA6PFyT0QasRYsSzdpfk9VrR5HPdJsMkQkSd08sS5J6maISJK6GSKSpG6GiCSp2/8HNiKRzfdmYrEAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(training_with_party['party_sobriety'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "c7db8342",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:33.017200Z",
     "iopub.status.busy": "2022-04-18T06:49:33.016933Z",
     "iopub.status.idle": "2022-04-18T06:49:33.061098Z",
     "shell.execute_reply": "2022-04-18T06:49:33.060103Z"
    },
    "papermill": {
     "duration": 0.128634,
     "end_time": "2022-04-18T06:49:33.063374",
     "exception": false,
     "start_time": "2022-04-18T06:49:32.934740",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>party_sobriety</th>\n",
       "      <th>time_col</th>\n",
       "      <th>injured_victims</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A</td>\n",
       "      <td>00</td>\n",
       "      <td>614.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A</td>\n",
       "      <td>01</td>\n",
       "      <td>426.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A</td>\n",
       "      <td>02</td>\n",
       "      <td>287.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A</td>\n",
       "      <td>03</td>\n",
       "      <td>299.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A</td>\n",
       "      <td>04</td>\n",
       "      <td>334.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>139</th>\n",
       "      <td>H</td>\n",
       "      <td>19</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>H</td>\n",
       "      <td>20</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>H</td>\n",
       "      <td>21</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>H</td>\n",
       "      <td>22</td>\n",
       "      <td>27.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>H</td>\n",
       "      <td>23</td>\n",
       "      <td>21.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>144 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    party_sobriety time_col  injured_victims\n",
       "0                A       00            614.0\n",
       "1                A       01            426.0\n",
       "2                A       02            287.0\n",
       "3                A       03            299.0\n",
       "4                A       04            334.0\n",
       "..             ...      ...              ...\n",
       "139              H       19             24.0\n",
       "140              H       20             12.0\n",
       "141              H       21             14.0\n",
       "142              H       22             27.0\n",
       "143              H       23             21.0\n",
       "\n",
       "[144 rows x 3 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped_party_collision = training_with_party.groupby(['party_sobriety', 'time_col'])['injured_victims'].sum().reset_index()\n",
    "grouped_party_collision"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "a908208d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:33.229539Z",
     "iopub.status.busy": "2022-04-18T06:49:33.229236Z",
     "iopub.status.idle": "2022-04-18T06:49:36.445938Z",
     "shell.execute_reply": "2022-04-18T06:49:36.445236Z"
    },
    "papermill": {
     "duration": 3.30304,
     "end_time": "2022-04-18T06:49:36.448154",
     "exception": false,
     "start_time": "2022-04-18T06:49:33.145114",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>jurisdiction</th>\n",
       "      <th>officer_id</th>\n",
       "      <th>reporting_district</th>\n",
       "      <th>chp_shift</th>\n",
       "      <th>population</th>\n",
       "      <th>county_city_location</th>\n",
       "      <th>special_condition</th>\n",
       "      <th>beat_type</th>\n",
       "      <th>chp_beat_type</th>\n",
       "      <th>...</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>collision_date</th>\n",
       "      <th>collision_time</th>\n",
       "      <th>process_date</th>\n",
       "      <th>time_col</th>\n",
       "      <th>victim_sex</th>\n",
       "      <th>victim_age</th>\n",
       "      <th>victim_seating_position</th>\n",
       "      <th>victim_safety_equipment_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8.975622e+06</td>\n",
       "      <td>3003.0</td>\n",
       "      <td>1248</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3003</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-28</td>\n",
       "      <td>18:58:00</td>\n",
       "      <td>2019-11-22</td>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.413594e+06</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>1978</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3021</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2005-12-10</td>\n",
       "      <td>15:00:00</td>\n",
       "      <td>2006-04-13</td>\n",
       "      <td>15</td>\n",
       "      <td>male</td>\n",
       "      <td>33.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>W</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.419931e+06</td>\n",
       "      <td>4307.0</td>\n",
       "      <td>S0542</td>\n",
       "      <td>LG206</td>\n",
       "      <td>5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4307</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2009-09-11</td>\n",
       "      <td>14:57:00</td>\n",
       "      <td>2010-05-19</td>\n",
       "      <td>14</td>\n",
       "      <td>male</td>\n",
       "      <td>42.0</td>\n",
       "      <td>1</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.801010e+18</td>\n",
       "      <td>3801.0</td>\n",
       "      <td>2108</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3801</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2001-03-19</td>\n",
       "      <td>17:05:00</td>\n",
       "      <td>2001-07-27</td>\n",
       "      <td>17</td>\n",
       "      <td>male</td>\n",
       "      <td>37.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.142389e+06</td>\n",
       "      <td>2701.0</td>\n",
       "      <td>5543</td>\n",
       "      <td>CRML</td>\n",
       "      <td>5</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2701</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2016-09-17</td>\n",
       "      <td>17:32:00</td>\n",
       "      <td>2016-10-20</td>\n",
       "      <td>17</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>279992</th>\n",
       "      <td>8.379958e+06</td>\n",
       "      <td>1901.0</td>\n",
       "      <td>275</td>\n",
       "      <td>17</td>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1901</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017-04-20</td>\n",
       "      <td>11:52:00</td>\n",
       "      <td>2017-07-06</td>\n",
       "      <td>11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>279993</th>\n",
       "      <td>3.388177e+06</td>\n",
       "      <td>9295.0</td>\n",
       "      <td>010846</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>9.0</td>\n",
       "      <td>300</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>state route</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2007-09-20</td>\n",
       "      <td>12:15:00</td>\n",
       "      <td>2008-03-27</td>\n",
       "      <td>12</td>\n",
       "      <td>male</td>\n",
       "      <td>44.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>279994</th>\n",
       "      <td>8.749483e+06</td>\n",
       "      <td>3342.0</td>\n",
       "      <td>788</td>\n",
       "      <td>631</td>\n",
       "      <td>5</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3342</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2018-09-04</td>\n",
       "      <td>05:33:00</td>\n",
       "      <td>2019-01-08</td>\n",
       "      <td>05</td>\n",
       "      <td>male</td>\n",
       "      <td>23.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>279995</th>\n",
       "      <td>9.019111e+07</td>\n",
       "      <td>9135.0</td>\n",
       "      <td>014425</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>9.0</td>\n",
       "      <td>4500</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>safety services program</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2016-05-24</td>\n",
       "      <td>15:30:00</td>\n",
       "      <td>2016-05-31</td>\n",
       "      <td>15</td>\n",
       "      <td>male</td>\n",
       "      <td>52.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>279996</th>\n",
       "      <td>8.441471e+06</td>\n",
       "      <td>3608.0</td>\n",
       "      <td>4342</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3608</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>not chp</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017-08-21</td>\n",
       "      <td>16:03:00</td>\n",
       "      <td>2017-09-14</td>\n",
       "      <td>16</td>\n",
       "      <td>male</td>\n",
       "      <td>39.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>279997 rows × 79 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             case_id  jurisdiction officer_id reporting_district  chp_shift  \\\n",
       "0       8.975622e+06        3003.0       1248                NaN          5   \n",
       "1       2.413594e+06        3000.0       1978                NaN          5   \n",
       "2       4.419931e+06        4307.0      S0542              LG206          5   \n",
       "3       3.801010e+18        3801.0       2108                  0          5   \n",
       "4       8.142389e+06        2701.0       5543               CRML          5   \n",
       "...              ...           ...        ...                ...        ...   \n",
       "279992  8.379958e+06        1901.0        275                 17          5   \n",
       "279993  3.388177e+06        9295.0     010846                NaN          1   \n",
       "279994  8.749483e+06        3342.0        788                631          5   \n",
       "279995  9.019111e+07        9135.0     014425                NaN          2   \n",
       "279996  8.441471e+06        3608.0       4342                NaN          5   \n",
       "\n",
       "        population  county_city_location  special_condition  beat_type  \\\n",
       "0              5.0                  3003                0.0          0   \n",
       "1              4.0                  3021                0.0          0   \n",
       "2              4.0                  4307                0.0          0   \n",
       "3              7.0                  3801                NaN          0   \n",
       "4              2.0                  2701                0.0          0   \n",
       "...            ...                   ...                ...        ...   \n",
       "279992         5.0                  1901                0.0          0   \n",
       "279993         9.0                   300                0.0          1   \n",
       "279994         4.0                  3342                0.0          0   \n",
       "279995         9.0                  4500                0.0          2   \n",
       "279996         5.0                  3608                0.0          0   \n",
       "\n",
       "                  chp_beat_type  ... latitude longitude collision_date  \\\n",
       "0                       not chp  ...      NaN       NaN     2019-09-28   \n",
       "1                       not chp  ...      NaN       NaN     2005-12-10   \n",
       "2                       not chp  ...      NaN       NaN     2009-09-11   \n",
       "3                       not chp  ...      NaN       NaN     2001-03-19   \n",
       "4                       not chp  ...      NaN       NaN     2016-09-17   \n",
       "...                         ...  ...      ...       ...            ...   \n",
       "279992                  not chp  ...      NaN       NaN     2017-04-20   \n",
       "279993              state route  ...      NaN       NaN     2007-09-20   \n",
       "279994                  not chp  ...      NaN       NaN     2018-09-04   \n",
       "279995  safety services program  ...      NaN       NaN     2016-05-24   \n",
       "279996                  not chp  ...      NaN       NaN     2017-08-21   \n",
       "\n",
       "       collision_time process_date  time_col victim_sex  victim_age  \\\n",
       "0            18:58:00   2019-11-22        18        NaN         NaN   \n",
       "1            15:00:00   2006-04-13        15       male        33.0   \n",
       "2            14:57:00   2010-05-19        14       male        42.0   \n",
       "3            17:05:00   2001-07-27        17       male        37.0   \n",
       "4            17:32:00   2016-10-20        17        NaN         NaN   \n",
       "...               ...          ...       ...        ...         ...   \n",
       "279992       11:52:00   2017-07-06        11        NaN         NaN   \n",
       "279993       12:15:00   2008-03-27        12       male        44.0   \n",
       "279994       05:33:00   2019-01-08        05       male        23.0   \n",
       "279995       15:30:00   2016-05-31        15       male        52.0   \n",
       "279996       16:03:00   2017-09-14        16       male        39.0   \n",
       "\n",
       "       victim_seating_position victim_safety_equipment_1  \n",
       "0                          NaN                       NaN  \n",
       "1                          1.0                         W  \n",
       "2                            1                         P  \n",
       "3                          9.0                         B  \n",
       "4                          NaN                       NaN  \n",
       "...                        ...                       ...  \n",
       "279992                     NaN                       NaN  \n",
       "279993                     1.0                         P  \n",
       "279994                     1.0                         P  \n",
       "279995                     1.0                         P  \n",
       "279996                     1.0                         P  \n",
       "\n",
       "[279997 rows x 79 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_with_victim = training.merge(cleaned_victim, on = 'case_id', how = 'left')\n",
    "training_with_victim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "fbfa5dae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:36.614884Z",
     "iopub.status.busy": "2022-04-18T06:49:36.613900Z",
     "iopub.status.idle": "2022-04-18T06:49:37.900999Z",
     "shell.execute_reply": "2022-04-18T06:49:37.900365Z"
    },
    "papermill": {
     "duration": 1.372581,
     "end_time": "2022-04-18T06:49:37.902992",
     "exception": false,
     "start_time": "2022-04-18T06:49:36.530411",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='victim_sex', ylabel='injured_victims'>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=training_with_victim, x='victim_sex', y='injured_victims')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "15ce8f3a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:38.073878Z",
     "iopub.status.busy": "2022-04-18T06:49:38.072804Z",
     "iopub.status.idle": "2022-04-18T06:49:39.110660Z",
     "shell.execute_reply": "2022-04-18T06:49:39.109661Z"
    },
    "papermill": {
     "duration": 1.125278,
     "end_time": "2022-04-18T06:49:39.112904",
     "exception": false,
     "start_time": "2022-04-18T06:49:37.987626",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='victim_age', ylabel='injured_victims'>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=training_with_victim, x='victim_age', y='injured_victims')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "34d13295",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:39.286506Z",
     "iopub.status.busy": "2022-04-18T06:49:39.285995Z",
     "iopub.status.idle": "2022-04-18T06:49:40.666516Z",
     "shell.execute_reply": "2022-04-18T06:49:40.665562Z"
    },
    "papermill": {
     "duration": 1.468934,
     "end_time": "2022-04-18T06:49:40.668757",
     "exception": false,
     "start_time": "2022-04-18T06:49:39.199823",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='victim_safety_equipment_1', ylabel='injured_victims'>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=training_with_victim, x='victim_safety_equipment_1', y='injured_victims')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f202e100",
   "metadata": {
    "papermill": {
     "duration": 0.085152,
     "end_time": "2022-04-18T06:49:40.841079",
     "exception": false,
     "start_time": "2022-04-18T06:49:40.755927",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Predicting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "91eb5f9e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:41.015319Z",
     "iopub.status.busy": "2022-04-18T06:49:41.015023Z",
     "iopub.status.idle": "2022-04-18T06:49:41.018693Z",
     "shell.execute_reply": "2022-04-18T06:49:41.017787Z"
    },
    "papermill": {
     "duration": 0.092787,
     "end_time": "2022-04-18T06:49:41.020939",
     "exception": false,
     "start_time": "2022-04-18T06:49:40.928152",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#x = contains Design Matrix\n",
    "#y = injured victims "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "f1b094e8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:41.197512Z",
     "iopub.status.busy": "2022-04-18T06:49:41.196987Z",
     "iopub.status.idle": "2022-04-18T06:49:41.349129Z",
     "shell.execute_reply": "2022-04-18T06:49:41.348190Z"
    },
    "papermill": {
     "duration": 0.243357,
     "end_time": "2022-04-18T06:49:41.351661",
     "exception": false,
     "start_time": "2022-04-18T06:49:41.108304",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn import linear_model as lm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "5b65c5bd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:41.525786Z",
     "iopub.status.busy": "2022-04-18T06:49:41.525508Z",
     "iopub.status.idle": "2022-04-18T06:49:41.529372Z",
     "shell.execute_reply": "2022-04-18T06:49:41.528541Z"
    },
    "papermill": {
     "duration": 0.093408,
     "end_time": "2022-04-18T06:49:41.531325",
     "exception": false,
     "start_time": "2022-04-18T06:49:41.437917",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import OneHotEncoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "ce8d5b60",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:41.705747Z",
     "iopub.status.busy": "2022-04-18T06:49:41.705216Z",
     "iopub.status.idle": "2022-04-18T06:49:41.709690Z",
     "shell.execute_reply": "2022-04-18T06:49:41.709035Z"
    },
    "papermill": {
     "duration": 0.09394,
     "end_time": "2022-04-18T06:49:41.711751",
     "exception": false,
     "start_time": "2022-04-18T06:49:41.617811",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "714f769b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:41.885291Z",
     "iopub.status.busy": "2022-04-18T06:49:41.884799Z",
     "iopub.status.idle": "2022-04-18T06:49:41.904231Z",
     "shell.execute_reply": "2022-04-18T06:49:41.903612Z"
    },
    "papermill": {
     "duration": 0.107901,
     "end_time": "2022-04-18T06:49:41.906138",
     "exception": false,
     "start_time": "2022-04-18T06:49:41.798237",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['case_id', 'injured_victims', 'weather_1', 'county_city_location',\n",
       "       'location_type', 'pcf_violation_category', 'collision_severity',\n",
       "       'lighting', 'time_col'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def train_test_split(data):\n",
    "    data_len = data.shape[0]\n",
    "    shuffled_indices = np.random.permutation(data_len)\n",
    "    train_indices = shuffled_indices[0:int(len(shuffled_indices)*0.8)]\n",
    "    test_indices = shuffled_indices[int(len(shuffled_indices)*0.8):]\n",
    "    return data.iloc[train_indices], data.iloc[test_indices]\n",
    "\n",
    "training, validation = train_test_split(cleaned_training)\n",
    "\n",
    "training.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "7ea93572",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:42.082844Z",
     "iopub.status.busy": "2022-04-18T06:49:42.082555Z",
     "iopub.status.idle": "2022-04-18T06:49:42.910827Z",
     "shell.execute_reply": "2022-04-18T06:49:42.909470Z"
    },
    "papermill": {
     "duration": 0.919723,
     "end_time": "2022-04-18T06:49:42.913815",
     "exception": false,
     "start_time": "2022-04-18T06:49:41.994092",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:24: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"
     ]
    }
   ],
   "source": [
    "def process_data(data, pipeline_functions, prediction_col):\n",
    "    \"\"\"Process the data for a guided model.\"\"\"\n",
    "    for function, arguments, keyword_arguments in pipeline_functions:\n",
    "        if keyword_arguments and (not arguments):\n",
    "            data = data.pipe(function, **keyword_arguments)\n",
    "        elif (not keyword_arguments) and (arguments):\n",
    "            data = data.pipe(function, *arguments)\n",
    "        else:\n",
    "            data = data.pipe(function)\n",
    "    X = data.drop(columns=[prediction_col]).to_numpy()\n",
    "    y = data.loc[:, prediction_col].round().to_numpy()\n",
    "    return X, np.round(abs(y))\n",
    "\n",
    "def select_columns(data, *columns):\n",
    "    \"\"\"Select only columns passed as arguments.\"\"\"\n",
    "    return data.loc[:, columns]\n",
    "\n",
    "def split_ohe(data, col):\n",
    "    choices = data[col].unique()\n",
    "    for choice in choices:\n",
    "        if not choice:\n",
    "            continue\n",
    "        choice = str(choice)\n",
    "        data['x0_' + str(choice)] = int(1) * list(data[col] == choice)\n",
    "    return data\n",
    "\n",
    "train_pipeline = [\n",
    "    (split_ohe, None, {\n",
    "        'col': 'lighting',\n",
    "    }),\n",
    "    (split_ohe, None, {\n",
    "        'col': 'pcf_violation_category',\n",
    "    }),\n",
    "    (split_ohe, None, {\n",
    "        'col': 'collision_severity',\n",
    "    }),\n",
    "    (select_columns, ['injured_victims', 'time_col'],\n",
    "        None)\n",
    "]\n",
    "\n",
    "test_pipeline = train_pipeline[1:]\n",
    "\n",
    "X_train, y_train = process_data(cleaned_training, train_pipeline, 'injured_victims')\n",
    "X_validation, y_validation = process_data(validation, test_pipeline, 'injured_victims')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "8755184a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:43.092693Z",
     "iopub.status.busy": "2022-04-18T06:49:43.092163Z",
     "iopub.status.idle": "2022-04-18T06:49:43.097271Z",
     "shell.execute_reply": "2022-04-18T06:49:43.096294Z"
    },
    "papermill": {
     "duration": 0.096548,
     "end_time": "2022-04-18T06:49:43.099514",
     "exception": false,
     "start_time": "2022-04-18T06:49:43.002966",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def rmse(predicted, actual):\n",
    "    return np.sqrt(np.mean((actual - predicted)**2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "88f19eff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:43.275720Z",
     "iopub.status.busy": "2022-04-18T06:49:43.274967Z",
     "iopub.status.idle": "2022-04-18T06:49:43.305778Z",
     "shell.execute_reply": "2022-04-18T06:49:43.304771Z"
    },
    "papermill": {
     "duration": 0.121553,
     "end_time": "2022-04-18T06:49:43.308411",
     "exception": false,
     "start_time": "2022-04-18T06:49:43.186858",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.svm import SVR\n",
    "\n",
    "linearmodel = lm.LinearRegression(fit_intercept=True).fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "6b9f9991",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:43.486893Z",
     "iopub.status.busy": "2022-04-18T06:49:43.486374Z",
     "iopub.status.idle": "2022-04-18T06:49:43.520211Z",
     "shell.execute_reply": "2022-04-18T06:49:43.519269Z"
    },
    "papermill": {
     "duration": 0.125701,
     "end_time": "2022-04-18T06:49:43.522559",
     "exception": false,
     "start_time": "2022-04-18T06:49:43.396858",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_fitted_m1 = linearmodel.fit(X_train, y_train).predict(X_train) \n",
    "y_predicted_m1 = linearmodel.predict(X_validation) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "ba862fa2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:43.699714Z",
     "iopub.status.busy": "2022-04-18T06:49:43.699137Z",
     "iopub.status.idle": "2022-04-18T06:49:43.708065Z",
     "shell.execute_reply": "2022-04-18T06:49:43.707065Z"
    },
    "papermill": {
     "duration": 0.099919,
     "end_time": "2022-04-18T06:49:43.710441",
     "exception": false,
     "start_time": "2022-04-18T06:49:43.610522",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Our Model\n",
      "Training RMSE: 0.6031609660579719\n",
      "Test RMSE: 0.608333123078364\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0.0051721570203920875"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "training_error_m1 = rmse(y_fitted_m1, y_train)\n",
    "test_error_m1 = rmse(y_predicted_m1, y_validation)\n",
    "print(\"Our Model\\nTraining RMSE: {}\\nTest RMSE: {}\\n\".format(training_error_m1, test_error_m1))\n",
    "test_error_m1 - training_error_m1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "0e370476",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:43.894567Z",
     "iopub.status.busy": "2022-04-18T06:49:43.893537Z",
     "iopub.status.idle": "2022-04-18T06:49:43.921277Z",
     "shell.execute_reply": "2022-04-18T06:49:43.920374Z"
    },
    "papermill": {
     "duration": 0.123413,
     "end_time": "2022-04-18T06:49:43.923436",
     "exception": false,
     "start_time": "2022-04-18T06:49:43.800023",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>injured_victims</th>\n",
       "      <th>weather_1</th>\n",
       "      <th>county_city_location</th>\n",
       "      <th>location_type</th>\n",
       "      <th>pcf_violation_category</th>\n",
       "      <th>collision_severity</th>\n",
       "      <th>lighting</th>\n",
       "      <th>time_col</th>\n",
       "      <th>x0_dark with no street lights</th>\n",
       "      <th>...</th>\n",
       "      <th>x0_fell asleep</th>\n",
       "      <th>x0_impeding traffic</th>\n",
       "      <th>x0_lights</th>\n",
       "      <th>x0_brakes</th>\n",
       "      <th>x0_pedestrian dui</th>\n",
       "      <th>x0_property damage only</th>\n",
       "      <th>x0_other injury</th>\n",
       "      <th>x0_pain</th>\n",
       "      <th>x0_severe injury</th>\n",
       "      <th>x0_fatal</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3098229.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>1941</td>\n",
       "      <td>highway</td>\n",
       "      <td>other than driver (or pedestrian)</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>dark with no street lights</td>\n",
       "      <td>02</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>260712.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>3007</td>\n",
       "      <td>highway</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>other injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 42 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     case_id  injured_victims weather_1  county_city_location location_type  \\\n",
       "5  3098229.0              0.0     clear                  1941       highway   \n",
       "8   260712.0              1.0    cloudy                  3007       highway   \n",
       "\n",
       "              pcf_violation_category    collision_severity  \\\n",
       "5  other than driver (or pedestrian)  property damage only   \n",
       "8                 unsafe lane change          other injury   \n",
       "\n",
       "                     lighting time_col  x0_dark with no street lights  ...  \\\n",
       "5  dark with no street lights       02                           True  ...   \n",
       "8                    daylight       09                          False  ...   \n",
       "\n",
       "   x0_fell asleep  x0_impeding traffic  x0_lights  x0_brakes  \\\n",
       "5           False                False      False      False   \n",
       "8           False                False      False      False   \n",
       "\n",
       "   x0_pedestrian dui  x0_property damage only  x0_other injury  x0_pain  \\\n",
       "5              False                     True            False    False   \n",
       "8              False                    False             True    False   \n",
       "\n",
       "   x0_severe injury  x0_fatal  \n",
       "5             False     False  \n",
       "8             False     False  \n",
       "\n",
       "[2 rows x 42 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_training.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "9d86d24f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:44.104591Z",
     "iopub.status.busy": "2022-04-18T06:49:44.104276Z",
     "iopub.status.idle": "2022-04-18T06:49:44.132467Z",
     "shell.execute_reply": "2022-04-18T06:49:44.131498Z"
    },
    "papermill": {
     "duration": 0.121352,
     "end_time": "2022-04-18T06:49:44.135017",
     "exception": false,
     "start_time": "2022-04-18T06:49:44.013665",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>injured_victims</th>\n",
       "      <th>weather_1</th>\n",
       "      <th>county_city_location</th>\n",
       "      <th>location_type</th>\n",
       "      <th>pcf_violation_category</th>\n",
       "      <th>collision_severity</th>\n",
       "      <th>lighting</th>\n",
       "      <th>time_col</th>\n",
       "      <th>x0_other than driver (or pedestrian)</th>\n",
       "      <th>...</th>\n",
       "      <th>x0_other equipment</th>\n",
       "      <th>x0_impeding traffic</th>\n",
       "      <th>x0_pedestrian right of way</th>\n",
       "      <th>x0_brakes</th>\n",
       "      <th>x0_hazardous parking</th>\n",
       "      <th>x0_severe injury</th>\n",
       "      <th>x0_property damage only</th>\n",
       "      <th>x0_other injury</th>\n",
       "      <th>x0_pain</th>\n",
       "      <th>x0_fatal</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>163865</th>\n",
       "      <td>4488085.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3001</td>\n",
       "      <td>highway</td>\n",
       "      <td>other than driver (or pedestrian)</td>\n",
       "      <td>severe injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>08</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183756</th>\n",
       "      <td>3403589.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>2400</td>\n",
       "      <td>intersection</td>\n",
       "      <td>automobile right of way</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>daylight</td>\n",
       "      <td>18</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52569</th>\n",
       "      <td>1787629.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>1900</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>severe injury</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>04</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162483</th>\n",
       "      <td>7036159.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>5608</td>\n",
       "      <td>ramp</td>\n",
       "      <td>improper turning</td>\n",
       "      <td>other injury</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>23</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99492</th>\n",
       "      <td>1117814.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>104</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>daylight</td>\n",
       "      <td>16</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          case_id  injured_victims weather_1  county_city_location  \\\n",
       "163865  4488085.0              1.0     clear                  3001   \n",
       "183756  3403589.0              0.0     clear                  2400   \n",
       "52569   1787629.0              1.0    cloudy                  1900   \n",
       "162483  7036159.0              1.0     clear                  5608   \n",
       "99492   1117814.0              0.0     clear                   104   \n",
       "\n",
       "       location_type             pcf_violation_category    collision_severity  \\\n",
       "163865       highway  other than driver (or pedestrian)         severe injury   \n",
       "183756  intersection            automobile right of way  property damage only   \n",
       "52569        highway                           speeding         severe injury   \n",
       "162483          ramp                   improper turning          other injury   \n",
       "99492        highway                           speeding  property damage only   \n",
       "\n",
       "                       lighting time_col  \\\n",
       "163865                 daylight       08   \n",
       "183756                 daylight       18   \n",
       "52569   dark with street lights       04   \n",
       "162483  dark with street lights       23   \n",
       "99492                  daylight       16   \n",
       "\n",
       "        x0_other than driver (or pedestrian)  ...  x0_other equipment  \\\n",
       "163865                                  True  ...               False   \n",
       "183756                                 False  ...               False   \n",
       "52569                                  False  ...               False   \n",
       "162483                                 False  ...               False   \n",
       "99492                                  False  ...               False   \n",
       "\n",
       "        x0_impeding traffic  x0_pedestrian right of way  x0_brakes  \\\n",
       "163865                False                       False      False   \n",
       "183756                False                       False      False   \n",
       "52569                 False                       False      False   \n",
       "162483                False                       False      False   \n",
       "99492                 False                       False      False   \n",
       "\n",
       "        x0_hazardous parking  x0_severe injury  x0_property damage only  \\\n",
       "163865                 False              True                    False   \n",
       "183756                 False             False                     True   \n",
       "52569                  False              True                    False   \n",
       "162483                 False             False                    False   \n",
       "99492                  False             False                     True   \n",
       "\n",
       "        x0_other injury  x0_pain  x0_fatal  \n",
       "163865            False    False     False  \n",
       "183756            False    False     False  \n",
       "52569             False    False     False  \n",
       "162483             True    False     False  \n",
       "99492             False    False     False  \n",
       "\n",
       "[5 rows x 35 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "validation.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "65116a7c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:44.319917Z",
     "iopub.status.busy": "2022-04-18T06:49:44.319645Z",
     "iopub.status.idle": "2022-04-18T06:49:44.695540Z",
     "shell.execute_reply": "2022-04-18T06:49:44.694499Z"
    },
    "papermill": {
     "duration": 0.471365,
     "end_time": "2022-04-18T06:49:44.697919",
     "exception": false,
     "start_time": "2022-04-18T06:49:44.226554",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>injured_victims</th>\n",
       "      <th>weather_1</th>\n",
       "      <th>county_city_location</th>\n",
       "      <th>location_type</th>\n",
       "      <th>pcf_violation_category</th>\n",
       "      <th>collision_severity</th>\n",
       "      <th>lighting</th>\n",
       "      <th>time_col</th>\n",
       "      <th>x0_dark with no street lights</th>\n",
       "      <th>...</th>\n",
       "      <th>party_number</th>\n",
       "      <th>victim_role</th>\n",
       "      <th>victim_sex</th>\n",
       "      <th>victim_age</th>\n",
       "      <th>victim_degree_of_injury</th>\n",
       "      <th>victim_seating_position</th>\n",
       "      <th>victim_safety_equipment_1</th>\n",
       "      <th>victim_safety_equipment_2</th>\n",
       "      <th>victim_ejected</th>\n",
       "      <th>pred</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3.098229e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>1941</td>\n",
       "      <td>highway</td>\n",
       "      <td>other than driver (or pedestrian)</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>dark with no street lights</td>\n",
       "      <td>02</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>female</td>\n",
       "      <td>21.0</td>\n",
       "      <td>no injury</td>\n",
       "      <td>6.0</td>\n",
       "      <td>P</td>\n",
       "      <td>G</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3.098229e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>1941</td>\n",
       "      <td>highway</td>\n",
       "      <td>other than driver (or pedestrian)</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>dark with no street lights</td>\n",
       "      <td>02</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>female</td>\n",
       "      <td>24.0</td>\n",
       "      <td>no injury</td>\n",
       "      <td>3.0</td>\n",
       "      <td>M</td>\n",
       "      <td>G</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.607120e+05</td>\n",
       "      <td>1.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>3007</td>\n",
       "      <td>highway</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>other injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>1</td>\n",
       "      <td>W</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9.335011e+18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3801</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>daylight</td>\n",
       "      <td>17</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.612484e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3015</td>\n",
       "      <td>ramp</td>\n",
       "      <td>improper turning</td>\n",
       "      <td>pain</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>female</td>\n",
       "      <td>90.0</td>\n",
       "      <td>no injury</td>\n",
       "      <td>3.0</td>\n",
       "      <td>M</td>\n",
       "      <td>G</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86257</th>\n",
       "      <td>5.906362e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3603</td>\n",
       "      <td>ramp</td>\n",
       "      <td>speeding</td>\n",
       "      <td>severe injury</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>18</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>male</td>\n",
       "      <td>68.0</td>\n",
       "      <td>severe injury</td>\n",
       "      <td>1</td>\n",
       "      <td>P</td>\n",
       "      <td>W</td>\n",
       "      <td>3.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86258</th>\n",
       "      <td>5.565961e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>111</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>property damage only</td>\n",
       "      <td>daylight</td>\n",
       "      <td>09</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86259</th>\n",
       "      <td>8.001887e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>4316</td>\n",
       "      <td>highway</td>\n",
       "      <td>speeding</td>\n",
       "      <td>other injury</td>\n",
       "      <td>daylight</td>\n",
       "      <td>14</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>male</td>\n",
       "      <td>44.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "      <td>W</td>\n",
       "      <td>3.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86260</th>\n",
       "      <td>3.388177e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>cloudy</td>\n",
       "      <td>300</td>\n",
       "      <td>highway</td>\n",
       "      <td>wrong side of road</td>\n",
       "      <td>pain</td>\n",
       "      <td>daylight</td>\n",
       "      <td>12</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>male</td>\n",
       "      <td>44.0</td>\n",
       "      <td>complaint of pain</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "      <td>W</td>\n",
       "      <td>1.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86261</th>\n",
       "      <td>8.749483e+06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>clear</td>\n",
       "      <td>3342</td>\n",
       "      <td>highway</td>\n",
       "      <td>unsafe lane change</td>\n",
       "      <td>other injury</td>\n",
       "      <td>dark with street lights</td>\n",
       "      <td>05</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>male</td>\n",
       "      <td>23.0</td>\n",
       "      <td>other visible injury</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>86262 rows × 53 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            case_id  injured_victims weather_1  county_city_location  \\\n",
       "0      3.098229e+06              0.0     clear                  1941   \n",
       "1      3.098229e+06              0.0     clear                  1941   \n",
       "2      2.607120e+05              1.0    cloudy                  3007   \n",
       "3      9.335011e+18              0.0     clear                  3801   \n",
       "4      8.612484e+06              1.0     clear                  3015   \n",
       "...             ...              ...       ...                   ...   \n",
       "86257  5.906362e+06              1.0     clear                  3603   \n",
       "86258  5.565961e+06              0.0     clear                   111   \n",
       "86259  8.001887e+06              1.0     clear                  4316   \n",
       "86260  3.388177e+06              1.0    cloudy                   300   \n",
       "86261  8.749483e+06              1.0     clear                  3342   \n",
       "\n",
       "      location_type             pcf_violation_category    collision_severity  \\\n",
       "0           highway  other than driver (or pedestrian)  property damage only   \n",
       "1           highway  other than driver (or pedestrian)  property damage only   \n",
       "2           highway                 unsafe lane change          other injury   \n",
       "3           highway                           speeding  property damage only   \n",
       "4              ramp                   improper turning                  pain   \n",
       "...             ...                                ...                   ...   \n",
       "86257          ramp                           speeding         severe injury   \n",
       "86258       highway                           speeding  property damage only   \n",
       "86259       highway                           speeding          other injury   \n",
       "86260       highway                 wrong side of road                  pain   \n",
       "86261       highway                 unsafe lane change          other injury   \n",
       "\n",
       "                         lighting time_col  x0_dark with no street lights  \\\n",
       "0      dark with no street lights       02                           True   \n",
       "1      dark with no street lights       02                           True   \n",
       "2                        daylight       09                          False   \n",
       "3                        daylight       17                          False   \n",
       "4                        daylight       09                          False   \n",
       "...                           ...      ...                            ...   \n",
       "86257     dark with street lights       18                          False   \n",
       "86258                    daylight       09                          False   \n",
       "86259                    daylight       14                          False   \n",
       "86260                    daylight       12                          False   \n",
       "86261     dark with street lights       05                          False   \n",
       "\n",
       "       ...  party_number  victim_role  victim_sex  victim_age  \\\n",
       "0      ...           1.0          2.0      female        21.0   \n",
       "1      ...           1.0          2.0      female        24.0   \n",
       "2      ...           2.0          1.0        male        32.0   \n",
       "3      ...           NaN          NaN         NaN         NaN   \n",
       "4      ...           1.0          2.0      female        90.0   \n",
       "...    ...           ...          ...         ...         ...   \n",
       "86257  ...           1.0          1.0        male        68.0   \n",
       "86258  ...           NaN          NaN         NaN         NaN   \n",
       "86259  ...           1.0          1.0        male        44.0   \n",
       "86260  ...           1.0          1.0        male        44.0   \n",
       "86261  ...           1.0          1.0        male        23.0   \n",
       "\n",
       "       victim_degree_of_injury  victim_seating_position  \\\n",
       "0                    no injury                      6.0   \n",
       "1                    no injury                      3.0   \n",
       "2         other visible injury                        1   \n",
       "3                          NaN                      NaN   \n",
       "4                    no injury                      3.0   \n",
       "...                        ...                      ...   \n",
       "86257            severe injury                        1   \n",
       "86258                      NaN                      NaN   \n",
       "86259     other visible injury                      1.0   \n",
       "86260        complaint of pain                      1.0   \n",
       "86261     other visible injury                      1.0   \n",
       "\n",
       "       victim_safety_equipment_1  victim_safety_equipment_2  victim_ejected  \\\n",
       "0                              P                          G             0.0   \n",
       "1                              M                          G             0.0   \n",
       "2                              W                        NaN             1.0   \n",
       "3                            NaN                        NaN             NaN   \n",
       "4                              M                          G             0.0   \n",
       "...                          ...                        ...             ...   \n",
       "86257                          P                          W             3.0   \n",
       "86258                        NaN                        NaN             NaN   \n",
       "86259                          P                          W             3.0   \n",
       "86260                          P                          W             1.0   \n",
       "86261                          P                        NaN             2.0   \n",
       "\n",
       "       pred  \n",
       "0      None  \n",
       "1      None  \n",
       "2      None  \n",
       "3      None  \n",
       "4      None  \n",
       "...     ...  \n",
       "86257  None  \n",
       "86258  None  \n",
       "86259  None  \n",
       "86260  None  \n",
       "86261  None  \n",
       "\n",
       "[86262 rows x 53 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pred = cleaned_training.merge(victim, on='case_id', how='left')\n",
    "pred['pred'] = y_predicted_m1.fill(1)\n",
    "pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "b3593d7d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:44.883626Z",
     "iopub.status.busy": "2022-04-18T06:49:44.883321Z",
     "iopub.status.idle": "2022-04-18T06:49:44.916152Z",
     "shell.execute_reply": "2022-04-18T06:49:44.915170Z"
    },
    "papermill": {
     "duration": 0.129048,
     "end_time": "2022-04-18T06:49:44.918592",
     "exception": false,
     "start_time": "2022-04-18T06:49:44.789544",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case_id</th>\n",
       "      <th>injured_victims</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3.098229e+06</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.607120e+05</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9.335011e+18</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.612484e+06</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>8.612484e+06</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86257</th>\n",
       "      <td>5.906362e+06</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86258</th>\n",
       "      <td>5.565961e+06</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86259</th>\n",
       "      <td>8.001887e+06</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86260</th>\n",
       "      <td>3.388177e+06</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86261</th>\n",
       "      <td>8.749483e+06</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>86261 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            case_id  injured_victims\n",
       "1      3.098229e+06              0.0\n",
       "2      2.607120e+05              1.0\n",
       "3      9.335011e+18              0.0\n",
       "4      8.612484e+06              1.0\n",
       "5      8.612484e+06              1.0\n",
       "...             ...              ...\n",
       "86257  5.906362e+06              1.0\n",
       "86258  5.565961e+06              0.0\n",
       "86259  8.001887e+06              1.0\n",
       "86260  3.388177e+06              1.0\n",
       "86261  8.749483e+06              1.0\n",
       "\n",
       "[86261 rows x 2 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "submission = pred[['case_id', 'injured_victims']]\n",
    "submission = submission.iloc[1: , :]\n",
    "submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "2c34d4bc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-04-18T06:49:45.104433Z",
     "iopub.status.busy": "2022-04-18T06:49:45.104134Z",
     "iopub.status.idle": "2022-04-18T06:49:45.341191Z",
     "shell.execute_reply": "2022-04-18T06:49:45.340024Z"
    },
    "papermill": {
     "duration": 0.332832,
     "end_time": "2022-04-18T06:49:45.343771",
     "exception": false,
     "start_time": "2022-04-18T06:49:45.010939",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "submission.to_csv('submission.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "efd6af9b",
   "metadata": {
    "papermill": {
     "duration": 0.091391,
     "end_time": "2022-04-18T06:49:45.527219",
     "exception": false,
     "start_time": "2022-04-18T06:49:45.435828",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 61.227883,
   "end_time": "2022-04-18T06:49:46.640486",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2022-04-18T06:48:45.412603",
   "version": "2.3.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
